Explicit_Total[i,200] <- Bin_1[i,28]
Explicit_Total[i,201] <- Bin_1[i,29]
Explicit_Total[i,202] <- Bin_2[i,28]
Explicit_Total[i,203] <- Bin_2[i,29]
Explicit_Total[i,204] <- Bin_3[i,28]
Explicit_Total[i,205] <- Bin_3[i,29]
Explicit_Total[i,206] <- Bin_4[i,28]
Explicit_Total[i,207] <- Bin_4[i,29]
Explicit_Total[i,208] <- Bin_5[i,28]
Explicit_Total[i,209] <- Bin_5[i,29]
#Trial 15
Explicit_Total[i,212] <- Explicit_Look_Accuracy[i,56]
Explicit_Total[i,213] <- Explicit_Look_Accuracy[i,30]
Explicit_Total[i,214] <- Explicit_Look_Accuracy[i,31]
Explicit_Total[i,215] <- Bin_1[i,30]
Explicit_Total[i,216] <- Bin_1[i,31]
Explicit_Total[i,217] <- Bin_2[i,30]
Explicit_Total[i,218] <- Bin_2[i,31]
Explicit_Total[i,219] <- Bin_3[i,30]
Explicit_Total[i,220] <- Bin_3[i,31]
Explicit_Total[i,221] <- Bin_4[i,30]
Explicit_Total[i,222] <- Bin_4[i,31]
Explicit_Total[i,223] <- Bin_5[i,30]
Explicit_Total[i,224] <- Bin_5[i,31]
#Trial 16
Explicit_Total[i,227] <- Explicit_Look_Accuracy[i,57]
Explicit_Total[i,228] <- Explicit_Look_Accuracy[i,32]
Explicit_Total[i,229] <- Explicit_Look_Accuracy[i,33]
Explicit_Total[i,230] <- Bin_1[i,32]
Explicit_Total[i,231] <- Bin_1[i,33]
Explicit_Total[i,232] <- Bin_2[i,32]
Explicit_Total[i,233] <- Bin_2[i,33]
Explicit_Total[i,234] <- Bin_3[i,32]
Explicit_Total[i,235] <- Bin_3[i,33]
Explicit_Total[i,236] <- Bin_4[i,32]
Explicit_Total[i,237] <- Bin_4[i,33]
Explicit_Total[i,238] <- Bin_5[i,32]
Explicit_Total[i,239] <- Bin_5[i,33]
#Trial 17
Explicit_Total[i,242] <- Explicit_Look_Accuracy[i,58]
Explicit_Total[i,243] <- Explicit_Look_Accuracy[i,34]
Explicit_Total[i,244] <- Explicit_Look_Accuracy[i,35]
Explicit_Total[i,245] <- Bin_1[i,34]
Explicit_Total[i,246] <- Bin_1[i,35]
Explicit_Total[i,247] <- Bin_2[i,34]
Explicit_Total[i,248] <- Bin_2[i,35]
Explicit_Total[i,249] <- Bin_3[i,34]
Explicit_Total[i,250] <- Bin_3[i,35]
Explicit_Total[i,251] <- Bin_4[i,34]
Explicit_Total[i,252] <- Bin_4[i,35]
Explicit_Total[i,253] <- Bin_5[i,34]
Explicit_Total[i,254] <- Bin_5[i,35]
#Trial 18
Explicit_Total[i,257] <- Explicit_Look_Accuracy[i,59]
Explicit_Total[i,258] <- Explicit_Look_Accuracy[i,36]
Explicit_Total[i,259] <- Explicit_Look_Accuracy[i,37]
Explicit_Total[i,260] <- Bin_1[i,36]
Explicit_Total[i,261] <- Bin_1[i,37]
Explicit_Total[i,262] <- Bin_2[i,36]
Explicit_Total[i,263] <- Bin_2[i,37]
Explicit_Total[i,264] <- Bin_3[i,36]
Explicit_Total[i,265] <- Bin_3[i,37]
Explicit_Total[i,266] <- Bin_4[i,36]
Explicit_Total[i,267] <- Bin_4[i,37]
Explicit_Total[i,268] <- Bin_5[i,36]
Explicit_Total[i,269] <- Bin_5[i,37]
#Trial 19
Explicit_Total[i,272] <- Explicit_Look_Accuracy[i,60]
Explicit_Total[i,273] <- Explicit_Look_Accuracy[i,38]
Explicit_Total[i,274] <- Explicit_Look_Accuracy[i,39]
Explicit_Total[i,275] <- Bin_1[i,38]
Explicit_Total[i,276] <- Bin_1[i,39]
Explicit_Total[i,277] <- Bin_2[i,38]
Explicit_Total[i,278] <- Bin_2[i,39]
Explicit_Total[i,279] <- Bin_3[i,38]
Explicit_Total[i,280] <- Bin_3[i,39]
Explicit_Total[i,281] <- Bin_4[i,38]
Explicit_Total[i,282] <- Bin_4[i,39]
Explicit_Total[i,283] <- Bin_5[i,38]
Explicit_Total[i,284] <- Bin_5[i,39]
#Trial 20
Explicit_Total[i,287] <- Explicit_Look_Accuracy[i,61]
Explicit_Total[i,288] <- Explicit_Look_Accuracy[i,40]
Explicit_Total[i,289] <- Explicit_Look_Accuracy[i,41]
Explicit_Total[i,290] <- Bin_1[i,40]
Explicit_Total[i,291] <- Bin_1[i,41]
Explicit_Total[i,292] <- Bin_2[i,40]
Explicit_Total[i,293] <- Bin_2[i,41]
Explicit_Total[i,294] <- Bin_3[i,40]
Explicit_Total[i,295] <- Bin_3[i,41]
Explicit_Total[i,296] <- Bin_4[i,40]
Explicit_Total[i,297] <- Bin_4[i,41]
Explicit_Total[i,298] <- Bin_5[i,40]
Explicit_Total[i,299] <- Bin_5[i,41]
#Similarity
Explicit_Total[i,15] <- 0
Explicit_Total[i,30] <- 1
Explicit_Total[i,45] <- 0
Explicit_Total[i,60] <- 0
Explicit_Total[i,75] <- 0
Explicit_Total[i,90] <- 0
Explicit_Total[i,105] <- 1
Explicit_Total[i,120] <- 0
Explicit_Total[i,135] <- 1
Explicit_Total[i,150] <- 1
Explicit_Total[i,165] <- 0
Explicit_Total[i,180] <- 0
Explicit_Total[i,195] <- 0
Explicit_Total[i,210] <- 1
Explicit_Total[i,225] <- 1
Explicit_Total[i,240] <- 1
Explicit_Total[i,255] <- 1
Explicit_Total[i,270] <- 0
Explicit_Total[i,285] <- 1
Explicit_Total[i,300] <- 1
#Repeated
if (Explicit_Look_Accuracy[i,62]==1 | Explicit_Look_Accuracy[i,62]==2 | Explicit_Look_Accuracy[i,62]==9 | Explicit_Look_Accuracy[i,62]==10) {
Explicit_Total[i,16] <- 1
Explicit_Total[i,31] <- 1
Explicit_Total[i,46] <- 0
Explicit_Total[i,61] <- 0
Explicit_Total[i,76] <- 1
Explicit_Total[i,91] <- 0
Explicit_Total[i,106] <- 0
Explicit_Total[i,121] <- 1
Explicit_Total[i,136] <- 0
Explicit_Total[i,151] <- 1
Explicit_Total[i,166] <- 1
Explicit_Total[i,181] <- 0
Explicit_Total[i,196] <- 0
Explicit_Total[i,211] <- 1
Explicit_Total[i,226] <- 1
Explicit_Total[i,241] <- 0
Explicit_Total[i,256] <- 0
Explicit_Total[i,271] <- 1
Explicit_Total[i,286] <- 1
Explicit_Total[i,301] <- 0
}
#Repeated
if (Explicit_Look_Accuracy[i,62]==3 | Explicit_Look_Accuracy[i,62]==4 | Explicit_Look_Accuracy[i,62]==7 | Explicit_Look_Accuracy[i,62]==8 | Explicit_Look_Accuracy[i,62]==11 | Explicit_Look_Accuracy[i,62]==12) {
Explicit_Total[i,16] <- 0
Explicit_Total[i,31] <- 0
Explicit_Total[i,46] <- 1
Explicit_Total[i,61] <- 1
Explicit_Total[i,76] <- 0
Explicit_Total[i,91] <- 1
Explicit_Total[i,106] <- 1
Explicit_Total[i,121] <- 0
Explicit_Total[i,136] <- 1
Explicit_Total[i,151] <- 0
Explicit_Total[i,166] <- 0
Explicit_Total[i,181] <- 1
Explicit_Total[i,196] <- 1
Explicit_Total[i,211] <- 0
Explicit_Total[i,226] <- 0
Explicit_Total[i,241] <- 1
Explicit_Total[i,256] <- 1
Explicit_Total[i,271] <- 0
Explicit_Total[i,286] <- 0
Explicit_Total[i,301] <- 1
}
if (Explicit_Look_Accuracy[i,62]==5 | Explicit_Look_Accuracy[i,62]==6) {
Explicit_Total[i,16] <- 0
Explicit_Total[i,31] <- 1
Explicit_Total[i,46] <- 0
Explicit_Total[i,61] <- 0
Explicit_Total[i,76] <- 0
Explicit_Total[i,91] <- 0
Explicit_Total[i,106] <- 1
Explicit_Total[i,121] <- 0
Explicit_Total[i,136] <- 1
Explicit_Total[i,151] <- 1
Explicit_Total[i,166] <- 0
Explicit_Total[i,181] <- 0
Explicit_Total[i,196] <- 0
Explicit_Total[i,211] <- 1
Explicit_Total[i,226] <- 1
Explicit_Total[i,241] <- 1
Explicit_Total[i,256] <- 1
Explicit_Total[i,271] <- 0
Explicit_Total[i,286] <- 1
Explicit_Total[i,301] <- 1
}
}
#Accuracy Average/Accuracy scores
for (i in 1:nrow(Explicit_Total)) {
Explicit_Total$Accuracy_Mean <- rowMeans(subset(Explicit_Total, select = c(Acc1, Acc2, Acc3, Acc4, Acc5, Acc6, Acc7, Acc8, Acc9, Acc10, Acc11, Acc12, Acc13, Acc14, Acc15, Acc16, Acc17, Acc18, Acc19, Acc20)))
}
for (i in 1:nrow(Explicit_Total)) {
if (Explicit_Total[i,302] < .6) {
Explicit_Total[i,303] <- 1
}else {
Explicit_Total[i,303] <- 0
}
}
for (i in 1:nrow(Explicit_Total)) {
if (Explicit_Total[i,302] < .45) {
Explicit_Total[i,304] <- 1
}
if (Explicit_Total[i,302] >= .45 & Explicit_Total[i,302] < .55) {
Explicit_Total[i,304] <- 2
}
if (Explicit_Total[i,302] >= .55) {
Explicit_Total[i,304] <- 3
}
}
fix(Explicit_Total)
fix(Explicit_Total)
Accuracy <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/Eye Tracker Raw Data/ET_accuracy/memory/accuracy_data/AllSubs.csv')
for (i in 1:nrow(Accuracy)) {
if (Accuracy[i,22] < .45) {
Accuracy[i,24] <- 1
}
if (Accuracy[i,22] >= .45 & Accuracy[i,22] < .55) {
Accuracy[i,24] <- 2
}
if (Accuracy[i,22] >= .55) {
Accuracy[i,24] <- 3
}
}
fix(Accuracy)
write.table(Accuracy, 'S:/Users/Sarah/R_Excel_Sheets/ET/Accuracy.csv', sep = ",", row.names=FALSE)
View(Accuracy)
EBin_1_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin1.csv')
EBin_2_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin2.csv')
EBin_3_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin3.csv')
EBin_4_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin4.csv')
EBin_5_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin5.csv')
EBin_6_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin6.csv')
EBin_7_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin7.csv')
EBin_8_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin8.csv')
EBin_9_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin9.csv')
EBin_10_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin10.csv')
EBin_11_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin11.csv')
EBin_12_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/ET/Explicit_Retrieval_ET_T1_Look_Time_250_Bin12.csv')
IBin_1_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin1.csv')
IBin_2_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin2.csv')
IBin_3_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin3.csv')
IBin_4_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin4.csv')
IBin_5_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin5.csv')
IBin_6_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin6.csv')
IBin_7_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin7.csv')
IBin_8_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin8.csv')
IBin_9_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin9.csv')
IBin_10_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin10.csv')
IBin_11_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin11.csv')
IBin_12_250 <- read.csv('S:/Users/Sarah/R_Excel_Sheets/Implicit_ET/Implicit_Retrieval_ET_T1_Look_Time_250_Bin12.csv')
Total_Prop_250 <- as.data.frame(matrix(c(999:999),ncol = 50, nrow = 100, byrow=TRUE))
names(Total_Prop_250) = c("Subject", "E250_Prop_Bin_1_New", "E250_Prop_Bin_1_Old","E250_Prop_Bin_2_New", "E250_Prop_Bin_2_Old","E250_Prop_Bin_3_New", "E250_Prop_Bin_3_Old",
"E250_Prop_Bin_4_New", "E250_Prop_Bin_4_Old","E250_Prop_Bin_5_New", "E250_Prop_Bin_5_Old","E250_Prop_Bin_6_New", "E250_Prop_Bin_6_Old",
"E250_Prop_Bin_7_New", "E250_Prop_Bin_7_Old","E250_Prop_Bin_8_New", "E250_Prop_Bin_8_Old","E250_Prop_Bin_9_New", "E250_Prop_Bin_9_Old",
"E250_Prop_Bin_10_New", "E250_Prop_Bin_10_Old","E250_Prop_Bin_11_New", "E250_Prop_Bin_11_Old","E250_Prop_Bin_12_New", "E250_Prop_Bin_12_Old",
"I250_Prop_Bin_1_New", "I250_Prop_Bin_1_Old","I250_Prop_Bin_2_New", "I250_Prop_Bin_2_Old","I250_Prop_Bin_3_New", "I250_Prop_Bin_3_Old",
"I250_Prop_Bin_4_New", "I250_Prop_Bin_4_Old","I250_Prop_Bin_5_New", "I250_Prop_Bin_5_Old","I250_Prop_Bin_6_New", "I250_Prop_Bin_6_Old",
"I250_Prop_Bin_7_New", "I250_Prop_Bin_7_Old","I250_Prop_Bin_8_New", "I250_Prop_Bin_8_Old","I250_Prop_Bin_9_New", "I250_Prop_Bin_9_Old",
"I250_Prop_Bin_10_New", "I250_Prop_Bin_10_Old","I250_Prop_Bin_11_New", "I250_Prop_Bin_11_Old","I250_Prop_Bin_12_New", "I250_Prop_Bin_12_Old","3BinAccuracy")
for (i in 1:nrow(Total_Prop_250)) {
subnum <- EBin_1_250[i,1]
###### Don't have accuracy scores yet
if(subnum==27) {next}
if(subnum==28) {next}
if(subnum==30) {next}
if(subnum==31) {next}
if(subnum==33) {next}
if(subnum==67) {next}
if(subnum==90) {next}
Total_Prop_250[i,1] <- EBin_1_250[i,1]
Total_Prop_250[i,50] <- EBin_1_250[i,46]
#250 bin 1 proportions for new and the old
Total_Prop_250[i,2] <- EBin_1_250[i,44]
Total_Prop_250[i,3] <- EBin_1_250[i,45]
#250 bin 2 proportions for new and the old
Total_Prop_250[i,4] <- EBin_2_250[i,44]
Total_Prop_250[i,5] <- EBin_2_250[i,45]
#250 bin 3 proportions for new and the old
Total_Prop_250[i,6] <- EBin_3_250[i,44]
Total_Prop_250[i,7] <- EBin_3_250[i,45]
#250 bin 4 proportions for new and the old
Total_Prop_250[i,8] <- EBin_4_250[i,44]
Total_Prop_250[i,9] <- EBin_4_250[i,45]
#250 bin 5 proportions for new and the old
Total_Prop_250[i,10] <- EBin_5_250[i,44]
Total_Prop_250[i,11] <- EBin_5_250[i,45]
#250 bin 6 proportions for new and the old
Total_Prop_250[i,12] <- EBin_6_250[i,44]
Total_Prop_250[i,13] <- EBin_6_250[i,45]
#250 bin 7 proportions for new and the old
Total_Prop_250[i,14] <- EBin_7_250[i,44]
Total_Prop_250[i,15] <- EBin_7_250[i,45]
#250 bin 8 proportions for new and the old
Total_Prop_250[i,16] <- EBin_8_250[i,44]
Total_Prop_250[i,17] <- EBin_8_250[i,45]
#250 bin 9 proportions for new and the old
Total_Prop_250[i,18] <- EBin_9_250[i,44]
Total_Prop_250[i,19] <- EBin_9_250[i,45]
#250 bin 10 proportions for new and the old
Total_Prop_250[i,20] <- EBin_10_250[i,44]
Total_Prop_250[i,21] <- EBin_10_250[i,45]
#250 bin 11 proportions for new and the old
Total_Prop_250[i,22] <- EBin_11_250[i,44]
Total_Prop_250[i,23] <- EBin_11_250[i,45]
#250 bin 12 proportions for new and the old
Total_Prop_250[i,24] <- EBin_12_250[i,44]
Total_Prop_250[i,25] <- EBin_12_250[i,45]
#250 bin 1 proportions for new and the old
Total_Prop_250[i,26] <- IBin_1_250[i,44]
Total_Prop_250[i,27] <- IBin_1_250[i,45]
#250 bin 2 proportions for new and the old
Total_Prop_250[i,28] <- IBin_2_250[i,44]
Total_Prop_250[i,29] <- IBin_2_250[i,45]
#250 bin 3 proportions for new and the old
Total_Prop_250[i,30] <- IBin_3_250[i,44]
Total_Prop_250[i,31] <- IBin_3_250[i,45]
#250 bin 4 proportions for new and the old
Total_Prop_250[i,32] <- IBin_4_250[i,44]
Total_Prop_250[i,33] <- IBin_4_250[i,45]
#250 bin 5 proportions for new and the old
Total_Prop_250[i,34] <- IBin_5_250[i,44]
Total_Prop_250[i,35] <- IBin_5_250[i,45]
#250 bin 6 proportions for new and the old
Total_Prop_250[i,36] <- IBin_6_250[i,44]
Total_Prop_250[i,37] <- IBin_6_250[i,45]
#250 bin 7 proportions for new and the old
Total_Prop_250[i,38] <- IBin_7_250[i,44]
Total_Prop_250[i,39] <- IBin_7_250[i,45]
#250 bin 8 proportions for new and the old
Total_Prop_250[i,40] <- IBin_8_250[i,44]
Total_Prop_250[i,41] <- IBin_8_250[i,45]
#250 bin 9 proportions for new and the old
Total_Prop_250[i,42] <- IBin_9_250[i,44]
Total_Prop_250[i,43] <- IBin_9_250[i,45]
#250 bin 10 proportions for new and the old
Total_Prop_250[i,44] <- IBin_10_250[i,44]
Total_Prop_250[i,45] <- IBin_10_250[i,45]
#250 bin 11 proportions for new and the old
Total_Prop_250[i,46] <- IBin_11_250[i,44]
Total_Prop_250[i,47] <- IBin_11_250[i,45]
#250 bin 12 proportions for new and the old
Total_Prop_250[i,48] <- IBin_12_250[i,44]
Total_Prop_250[i,49] <- IBin_12_250[i,45]
}
Total_Prop_250 <- Total_Prop_250[!(Total_Prop_250$Subject==999),]
write.table(Total_Prop_250, 'S:/Users/Sarah/R_Excel_Sheets/ET/Total_Prop_250.csv', sep=",", row.names=FALSE)
rm(list=ls(all=TRUE))
setwd("S:/Users/Sarah/Data/Tadpole/T1/Touchscreen Raw Data/retrieval/")
pc <- "S:/Users/Sarah/Data/Tadpole/T1/Touchscreen Raw Data/retrieval/"
subj=1
for (subj in 1:118) {
if(subj==2) {next} #this is if need to skip some data
if(subj==5) {next}
if(subj==6) {next}
if(subj==8) {next}
if(subj==10) {next}
if(subj==11) {next}
if(subj==25) {next}
if(subj==27) {next}
if(subj==29) {next}
if(subj==30) {next}
if(subj==32) {next}
if(subj==58) {next}
if(subj==72) {next}
if(subj==79) {next}
if(subj==80) {next}
if(subj==82) {next}
if(subj==84) {next}
if(subj==85) {next}
if(subj==88) {next}
if(subj==92) {next}
if(subj==94) {next}
if(subj==96) {next}
if(subj==99) {next}
if(subj==100) {next}
if(subj==104) {next}
if(subj==105) {next}
if(subj==107) {next}
if(subj==108) {next}
if(subj==109) {next}
if(subj==115) {next}
if(subj==117) {next}
#Read in data table
memoryT1 <- read.csv(paste(pc,subj,"_log.csv",sep=""), header=T)
head(memoryT1)
accuracycol <-2
RTcol <-3
choicecol <-4
#creates matrix of 1 row and 41 columns for output data.
memory <- as.data.frame(matrix(c(999:999),ncol=61,nrow=1,byrow=T))
names(memory)=c("Subject_ID","acc1","RT1","response1","acc2","RT2","response2","acc3","RT3","response3","acc4","RT4","response4","acc5","RT5","response5","acc6","RT6","response6",
"acc7","RT7","response7","acc8","RT8","response8","acc9","RT9","response9","acc10","RT10","response10","acc11","RT11","response11","acc12","response12","RT12","acc13","RT13","response13",
"acc14","RT14","response14","acc15","RT15","response15","acc16","RT16","response16","acc17","RT17","response17","acc18","RT18","response18","acc19","RT19","response19","acc20","RT20","response20")
memory[1,1] <- memoryT1[1,4] #Sets the first column to ID number
trialcounter <- 1
#for each row, if beginning of trial...
for (i in 1:nrow(memoryT1)) {
if(memoryT1[i,12] != "press spacebar to start retrieval task" &
memoryT1[i,12] != "blacksquare.bmp" &
memoryT1[i,12] != "whiteborder.bmp" &
memoryT1[i,12] != "MutedBallie.avi (174x144)" &
memoryT1[i,12] != "press spacebar to start perceptual task"
) {
if(memoryT1[i,11] != "SPACE"){
if(memoryT1[i, 14]=="True" | memoryT1[i, 14]==TRUE){
correct <- 1
}
if(memoryT1[i, 14]=="False" | memoryT1[i, 14]==FALSE){
correct <- 0
}
#correct <- memoryT1[i,14]
}else {
correct <- 999
}
RT <- memoryT1[i,13]
choice <- memoryT1[i,10]
memory[1,accuracycol] <- correct
memory[1,RTcol] <- RT
memory[1,choicecol] <- choice
accuracycol <- accuracycol + 3
RTcol <- RTcol + 3
choicecol <- choicecol + 3
trialcounter <- trialcounter + 1
}
#Will write data table to csv format
write.table(memory,paste(pc,'processed data/',"sub",subj,".txt",sep=""))
}#end for loop for each participant
}
#Merging subject files
#Let's say all the files that you reformat and write above are in folder "processed data"
#Then you can have R read in each file at a time and add it to another spreadsheet
dir <- paste(pc,'processed data/',sep="")
files <- list.files(dir) #lists all the names of the files within the directory
AllSubs <- read.table(paste(dir,files[1],sep=""),header=T) #Set new data table to first file in directory
names(AllSubs)=c("Subject_ID","acc1","RT1","response1","acc2","RT2","response2","acc3","RT3","response3","acc4","RT4","response4","acc5","RT5","response5","acc6","RT6","response6",
"acc7","RT7","response7","acc8","RT8","response8","acc9","RT9","response9","acc10","RT10","response10","acc11","RT11","response11","acc12","response12","RT12","acc13","RT13","response13",
"acc14","RT14","response14","acc15","RT15","response15","acc16","RT16","response16","acc17","RT17","response17","acc18","RT18","response18","acc19","RT19","response19","acc20","RT20","response20")
#Loop through all other files and add them to new data table
for(i in 2:length(files)){
temp <- read.table(paste(dir,files[i],sep=""),header=T)
AllSubs <- rbind(AllSubs,temp)
}
AllSubjects <- as.data.frame(matrix(c(999:999),ncol = 61, nrow = 100, byrow=TRUE))
names(AllSubjects)=c("ID","accuracy1","accuracy2","accuracy3","accuracy4","accuracy5","accuracy6","accuracy7","accuracy8",
"accuracy9","accuracy10","accuracy11","accuracy12","accuracy13","accuracy14","accuracy15","accuracy16","accuracy17",
"accuracy18","accuracy19","accuracy20","response1","response2","response3","response4","response5","response6",
"response7","response8","response9","response10","response11","response12","response13","response14","response15",
"response16","response17","response18","response19","response20","RT1","RT2","RT3","RT4","RT5","RT6","RT7","RT8",
"RT9","RT10","RT11","RT12","RT13","RT14","RT15","RT16","RT17","RT18","RT19","RT20")
for (i in 1:nrow(AllSubs)) {
AllSubjects[i,1] <- AllSubs[i,1]
AllSubjects[i,2] <- AllSubs[i,2]
AllSubjects[i,3] <- AllSubs[i,5]
AllSubjects[i,4] <- AllSubs[i,8]
AllSubjects[i,5] <- AllSubs[i,11]
AllSubjects[i,6] <- AllSubs[i,14]
AllSubjects[i,7] <- AllSubs[i,17]
AllSubjects[i,8] <- AllSubs[i,20]
AllSubjects[i,9] <- AllSubs[i,23]
AllSubjects[i,10] <- AllSubs[i,26]
AllSubjects[i,11] <- AllSubs[i,29]
AllSubjects[i,12] <- AllSubs[i,32]
AllSubjects[i,13] <- AllSubs[i,35]
AllSubjects[i,14] <- AllSubs[i,38]
AllSubjects[i,15] <- AllSubs[i,41]
AllSubjects[i,16] <- AllSubs[i,44]
AllSubjects[i,17] <- AllSubs[i,47]
AllSubjects[i,18] <- AllSubs[i,50]
AllSubjects[i,19] <- AllSubs[i,53]
AllSubjects[i,20] <- AllSubs[i,56]
AllSubjects[i,21] <- AllSubs[i,59]
AllSubjects[i,22] <- AllSubs[i,4]
AllSubjects[i,23] <- AllSubs[i,7]
AllSubjects[i,24] <- AllSubs[i,10]
AllSubjects[i,25] <- AllSubs[i,13]
AllSubjects[i,26] <- AllSubs[i,16]
AllSubjects[i,27] <- AllSubs[i,19]
AllSubjects[i,28] <- AllSubs[i,22]
AllSubjects[i,29] <- AllSubs[i,25]
AllSubjects[i,30] <- AllSubs[i,28]
AllSubjects[i,31] <- AllSubs[i,31]
AllSubjects[i,32] <- AllSubs[i,34]
AllSubjects[i,33] <- AllSubs[i,37]
AllSubjects[i,34] <- AllSubs[i,40]
AllSubjects[i,35] <- AllSubs[i,43]
AllSubjects[i,36] <- AllSubs[i,46]
AllSubjects[i,37] <- AllSubs[i,49]
AllSubjects[i,38] <- AllSubs[i,52]
AllSubjects[i,39] <- AllSubs[i,55]
AllSubjects[i,40] <- AllSubs[i,58]
AllSubjects[i,41] <- AllSubs[i,61]
AllSubjects[i,42] <- AllSubs[i,3]
AllSubjects[i,43] <- AllSubs[i,6]
AllSubjects[i,44] <- AllSubs[i,9]
AllSubjects[i,45] <- AllSubs[i,12]
AllSubjects[i,46] <- AllSubs[i,15]
AllSubjects[i,47] <- AllSubs[i,18]
AllSubjects[i,48] <- AllSubs[i,21]
AllSubjects[i,49] <- AllSubs[i,24]
AllSubjects[i,50] <- AllSubs[i,27]
AllSubjects[i,51] <- AllSubs[i,30]
AllSubjects[i,52] <- AllSubs[i,33]
AllSubjects[i,53] <- AllSubs[i,36]
AllSubjects[i,54] <- AllSubs[i,39]
AllSubjects[i,55] <- AllSubs[i,42]
AllSubjects[i,56] <- AllSubs[i,45]
AllSubjects[i,57] <- AllSubs[i,48]
AllSubjects[i,58] <- AllSubs[i,51]
AllSubjects[i,59] <- AllSubs[i,54]
AllSubjects[i,60] <- AllSubs[i,57]
AllSubjects[i,61] <- AllSubs[i,60]
}
#Write new data set to a txt file
write.table(AllSubs,paste(pc,'processed data/AllSubs.txt',sep=""),row.names=FALSE)
write.table(AllSubjects,"S:/Users/Sarah/Data/Tadpole/T1/Touchscreen Raw Data/retrieval/processed data/AllSubjects.csv",sep=",", row.names=FALSE)
