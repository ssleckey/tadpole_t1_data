d.raw_ts <- read.table("AllSubs_TS.txt", header = TRUE)
setwd("~/Desktop/tadpole_t1_data/analysis/26-30-mos/")
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(plyr)
library(dplyr)
library(RWiener)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
library(psych)
library(Hmisc)
library(magrittr)
theme_set(theme_bw())
demo <- read.csv("demographics.csv")
trial_info <- read.csv("conditions.csv", header = TRUE)
trial_info$trial <- as.character(trial_info$trial)
word_fam_key <- read.csv("word_fam_key.csv")
word_fam_key$trial <- as.character(word_fam_key$trial)
word_fam <- read.csv("word_familiarity.csv") %>%
gather("target", "familiarity", 2:41 )
response_key <- read.csv("response_key.csv")
response_key$trial <- as.character(response_key$trial)
glm_RT_full <- lmer(RT ~ similar + acc +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
#accurate trials
d_filt_rt_t <- filter(d_filt_rt, acc == "2") %>%
select(ID, trial, RT, similar) %>%
group_by(ID, similar) %>%
summarise(RT = mean(RT)) %>%
spread(similar, RT)
# paired t-test
test_acc <- t.test(d_filt_rt_t$similar, d_filt_rt_t$dissimilar,paired=TRUE)
test_acc
#inaccurate trials
d_filt_rt_t <- filter(d_filt_rt, acc == "1") %>%
select(ID, trial, RT, similar) %>%
group_by(ID, similar) %>%
summarise(RT = mean(RT)) %>%
spread(similar, RT)
# paired t-test
test_inacc <- t.test(d_filt_rt_t$similar, d_filt_rt_t$dissimilar,paired=TRUE)
test_inacc
View(d_et_filt_t)
d_filt_rt_t <- filter(d_filt_rt, acc == "2") %>%
select(ID, trial, RT, similar) %>%
group_by(ID, similar) %>%
summarise(RT = mean(RT)) %>%
spread(similar, RT)
source('~/.active-rstudio-document', echo=TRUE)
d_et_filt <- d_et %>%
mutate(acc = acc_et)%>%
select(-acc_et)%>%
filter(!is.na(trans),
!is.na(acc),
familiarity != 0)
d_et_filt$acc <- as.character(d_et_filt$acc)
#accurate trials
d_et_filt_t <- filter(d_et_filt, acc == "1") %>%
select(ID, trial, trans, similar) %>%
group_by(ID, similar) %>%
summarise(trans = mean(trans)) %>%
spread(similar, trans)
# paired t-test
test_acc <- t.test(d_et_filt_t$similar, d_et_filt_t$dissimilar,paired=TRUE)
test_acc
#inaccurate trials
d_et_filt_t <- filter(d_et_filt, acc == "0") %>%
select(ID, trial, trans, similar) %>%
group_by(ID, similar) %>%
summarise(trans = mean(trans)) %>%
spread(similar, trans)%>%
filter(!is.na(similar))%>%
filter(!is.na(dissimilar))
# paired t-test
test_inacc <- t.test(d_et_filt_t$similar, d_et_filt_t$dissimilar,paired=TRUE)
test_inacc
ggplot(aes(x = trans_acc_diff),
data = d_et_filt_id) +
geom_density(alpha = 0.7, adjust = 1.5)
ggplot(aes(x = trans_sim_diff),
data = d_et_filt_id) +
geom_density(alpha = 0.7, adjust = 1.5)
ggplot(aes(x = trans_acc_diff),
data = d_et_filt_id) +
geom_density(alpha = 0.7, adjust = 1.5)
ggplot(aes(x = trans_sim_diff),
data = d_et_filt_id) +
geom_density(alpha = 0.7, adjust = 1.5)
d_et_filt$acc_et <- as.numeric(as.character(d_et_filt$acc_et))
d_et_filt_id <- d_et_filt %>%
group_by(ID) %>%
mutate(trans_acc = mean(trans[acc_et == 1])) %>%
mutate(trans_inacc = mean(trans[acc_et == 0])) %>%
mutate(trans_sim = mean(trans[similar == "similar"])) %>%
mutate(trans_dissim = mean(trans[similar == "dissimilar"])) %>%
mutate(trans_acc_diff = trans_inacc - trans_acc) %>%
mutate(trans_sim_diff = trans_sim - trans_dissim) %>%
mutate(avg_acc = mean(acc_et))
d_et_filt$acc <- as.numeric(as.character(d_et_filt$acc))
d_et_filt_id <- d_et_filt %>%
group_by(ID) %>%
mutate(trans_acc = mean(trans[acc == 1])) %>%
mutate(trans_inacc = mean(trans[acc == 0])) %>%
mutate(trans_sim = mean(trans[similar == "similar"])) %>%
mutate(trans_dissim = mean(trans[similar == "dissimilar"])) %>%
mutate(trans_acc_diff = trans_inacc - trans_acc) %>%
mutate(trans_sim_diff = trans_sim - trans_dissim) %>%
mutate(avg_acc = mean(acc))
ggplot(aes(x = trans_acc_diff),
data = d_et_filt_id) +
geom_density(alpha = 0.7, adjust = 1.5)
ggplot(aes(x = trans_sim_diff),
data = d_et_filt_id) +
geom_density(alpha = 0.7, adjust = 1.5)
d_et_filt_id <- d_et_filt_id %>%
select(ID, trans_acc_diff, trans_sim_diff, avg_acc) %>%
distinct %>%
ungroup %>%
select(-ID)
rcorr(as.matrix(d_et_filt_id))
corstarsl <- function(x){
require(Hmisc)
x <- as.matrix(x)
R <- rcorr(x)$r
p <- rcorr(x)$P
## define notions for significance levels; spacing is important.
mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
## trunctuate the matrix that holds the correlations to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(x)
colnames(Rnew) <- paste(colnames(x), "", sep="")
## remove upper triangle
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = TRUE)] <- ""
Rnew <- as.data.frame(Rnew)
## remove last column and return the matrix (which is now a data frame)
Rnew <- cbind(Rnew[1:length(Rnew)-1])
return(Rnew)
}
corstarsl(d_et_filt_id)
kable(anova(glm_trans_full, glm_trans_acc))
sim_effect <- anova(glm_trans_full, glm_trans_acc)
sim_effect$p <- as.numeric(sim_effect$`Pr(>Chisq)`[2])
kable(anova(glm_trans_full, glm_trans_interaction))
#more complex random effects structures fail to converge.
#expect random effects slopes to vary more for ID than target- effects of similarity and accuracy should vary more by participant than target.
glm_RT_full <- lmer(RT ~ similar + acc +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_interaction <- lmer(RT ~ similar * acc +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_sim <- lmer(RT ~ similar +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_acc <- lmer(RT ~ acc +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_age <- lmer(RT ~ similar + acc + age_months +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_age_sim <- lmer(RT ~  acc + similar * age_months +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_age_acc <- lmer(RT ~ similar + acc * age_months +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
d_et_filt$acc <- as.character(d_et_filt$acc)
#accurate trials
d_et_filt_t <- filter(d_et_filt, acc == "2") %>%
select(ID, trial, trans, similar) %>%
group_by(ID, similar) %>%
summarise(trans = mean(trans)) %>%
spread(similar, trans)
# paired t-test
test_acc <- t.test(d_et_filt_t$similar, d_et_filt_t$dissimilar,paired=TRUE)
test_acc
#inaccurate trials
d_et_filt_t <- filter(d_et_filt, acc == "1") %>%
select(ID, trial, trans, similar) %>%
group_by(ID, similar) %>%
summarise(trans = mean(trans)) %>%
spread(similar, trans)%>%
filter(!is.na(similar))%>%
filter(!is.na(dissimilar))
# paired t-test
test_inacc <- t.test(d_et_filt_t$similar, d_et_filt_t$dissimilar,paired=TRUE)
test_inacc
d_et_filt$acc <- as.numeric(as.character(d_et_filt$acc))
d_et_filt_id <- d_et_filt %>%
group_by(ID) %>%
mutate(trans_acc = mean(trans[acc == 1])) %>%
mutate(trans_inacc = mean(trans[acc == 0])) %>%
mutate(trans_sim = mean(trans[similar == "similar"])) %>%
mutate(trans_dissim = mean(trans[similar == "dissimilar"])) %>%
mutate(trans_acc_diff = trans_inacc - trans_acc) %>%
mutate(trans_sim_diff = trans_sim - trans_dissim) %>%
mutate(avg_acc = mean(acc))
source('~/.active-rstudio-document', echo=TRUE)
View(d_filt_rt_log)
source('~/.active-rstudio-document', echo=TRUE)
d_filt_rt_log <- d_ts %>%
group_by(ID)%>%
mutate(RT = log(RT))%>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
top_bound <- mean(log(d_ts$RT)) + 3*sd(log(d_ts$RT))
bottom_bound <- mean(log(d_ts$RT)) - 3*sd(log(d_ts$RT))
d_filt_rt <- d_ts %>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
d_filt_rt_log <- d_ts %>%
group_by(ID)%>%
mutate(RT = log(RT))%>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
#more complex random effects structures fail to converge.
#expect random effects slopes to vary more for ID than target- effects of similarity and accuracy should vary more by participant than target.
glm_RT_full <- lmer(RT ~ similar + acc +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_interaction <- lmer(RT ~ similar * acc +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_sim <- lmer(RT ~ similar +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_acc <- lmer(RT ~ acc +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_age <- lmer(RT ~ similar + acc + age_months +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_age_sim <- lmer(RT ~  acc + similar * age_months +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
glm_RT_age_acc <- lmer(RT ~ similar + acc * age_months +
(similar + acc | ID),
data = d_filt_rt_log, REML = FALSE)
View(d_filt_rt_log)
top_bound <- mean(log(d_ts$RT)) + 3*sd(log(d_ts$RT))
bottom_bound <- mean(log(d_ts$RT)) - 3*sd(log(d_ts$RT))
d_filt_rt <- d_ts %>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
d_filt_rt_log <- d_ts %>%
group_by(ID)%>%
mutate(RT = log(RT))%>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
d_filt_rt_log <- d_ts %>%
group_by(ID)
d_filt_rt_log <- d_ts %>%
group_by(ID)%>%
mutate(RT = log(RT))
d_filt_rt_log <- d_ts %>%
group_by(ID)%>%
mutate(RT = log(RT))%>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
d_filt_rt_log <- d_ts %>%
group_by(ID)%>%
mutate(RT = log(RT))
View(d_filt_rt_log)
top_bound <- mean(log(d_ts$RT)) + 3*sd(log(d_ts$RT))
bottom_bound <- mean(log(d_ts$RT)) - 3*sd(log(d_ts$RT))
d_filt_rt <- d_ts %>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
d_filt_rt_log <- d_ts %>%
mutate(RT = log(RT))%>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
top_bound <- mean(log(d_ts$RT)) + 3*sd(log(d_ts$RT))
bottom_bound <- mean(log(d_ts$RT)) - 3*sd(log(d_ts$RT))
d_filt_rt <- d_ts %>%
filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
d_filt_rt_log <- d_filt_rt %>%
mutate(RT = log(RT))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(glm_RT_interaction)
glm_trans_full <- lmer(trans ~ similar + acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
summary(glm_trans_interaction)
kable(anova(glm_trans_full, glm_trans_sim))
kable(anova(glm_trans_full, glm_trans_acc))
kable(anova(glm_trans_full, glm_trans_sim))
d_et_filt$acc <- as.character(d_et_filt$acc)
#accurate trials
d_et_filt_t <- filter(d_et_filt, acc == "2") %>%
select(ID, trial, trans, similar) %>%
group_by(ID, similar) %>%
summarise(trans = mean(trans)) %>%
spread(similar, trans)
# paired t-test
test_acc <- t.test(d_et_filt_t$similar, d_et_filt_t$dissimilar,paired=TRUE)
test_acc
#inaccurate trials
d_et_filt_t <- filter(d_et_filt, acc == "1") %>%
select(ID, trial, trans, similar) %>%
group_by(ID, similar) %>%
summarise(trans = mean(trans)) %>%
spread(similar, trans)%>%
filter(!is.na(similar))%>%
filter(!is.na(dissimilar))
# paired t-test
test_inacc <- t.test(d_et_filt_t$similar, d_et_filt_t$dissimilar,paired=TRUE)
test_inacc
View(d_et_filt)
d_et_filt_t <- filter(d_et_filt, similar == "similar")
d_et_filt_t <- filter(d_et_filt, similar == "similar") %>%
select(ID, trial, trans, acc) %>%
group_by(ID, acc) %>%
summarise(trans = mean(trans)) %>%
spread(acc, trans)%>%
filter(!is.na(similar))%>%
filter(!is.na(dissimilar))
View(d_et_filt_t)
d_et_filt_t <- filter(d_et_filt, similar == "similar") %>%
select(ID, trial, trans, acc) %>%
group_by(ID, acc) %>%
summarise(trans = mean(trans)) %>%
spread(acc, trans)%>%
filter(!is.na(acc1))%>%
filter(!is.na(acc2))
d_et_filt_t <- filter(d_et_filt, similar == "similar") %>%
select(ID, trial, trans, acc) %>%
group_by(ID, acc) %>%
summarise(trans = mean(trans)) %>%
spread(acc, trans)
d_et_filt_t <- filter(d_et_filt, similar == "similar") %>%
select(ID, trial, trans, acc) %>%
group_by(ID, acc) %>%
summarise(trans = mean(trans)) %>%
spread(acc, trans)%>%
filter(!is.na(1))%>%
filter(!is.na(2))
d_et_filt$acc <- as.character(d_et_filt$acc)
d_et_filt_t <- filter(d_et_filt, similar == "similar") %>%
select(ID, trial, trans, acc) %>%
group_by(ID, acc) %>%
summarise(trans = mean(trans)) %>%
spread(acc, trans)%>%
filter(!is.na(1))%>%
filter(!is.na(2))
test_inacc <- t.test(d_et_filt_t$similar, d_et_filt_t$dissimilar,paired=TRUE)
test_inacc
d_et_filt <- d_et_filt %>%
mutate(acc = ifelse(acc == 1, "acc",
"inacc"))
#inaccurate trials
d_et_filt_t <- filter(d_et_filt, similar == "similar") %>%
select(ID, trial, trans, acc) %>%
group_by(ID, acc) %>%
summarise(trans = mean(trans)) %>%
spread(acc, trans)%>%
filter(!is.na(acc))%>%
filter(!is.na(inacc))
View(d_et_filt_t)
test_inacc <- t.test(d_et_filt_t$acc, d_et_filt_t$inacc,paired=TRUE)
test_inacc
#similar trials
d_et_filt_t <- filter(d_et_filt, similar == "dissimilar") %>%
select(ID, trial, trans, acc) %>%
group_by(ID, acc) %>%
summarise(trans = mean(trans)) %>%
spread(acc, trans)%>%
filter(!is.na(acc))%>%
filter(!is.na(inacc))
# paired t-test
test_dissim <- t.test(d_et_filt_t$acc, d_et_filt_t$inacc,paired=TRUE)
test_dissim
source('~/.active-rstudio-document', echo=TRUE)
d_et_filt
d_et_filt$acc[acc == 2] <- "acc"
d_et_filt$acc
d_et_filt$acc <- as.numeric(d_et_filt$acc)
d_et_filt$acc[acc == 2] <- "acc"
d_et_filt$acc[d_et_filt$acc == 2] <- "acc"
d_et_filt$acc <- as.numeric(d_et_filt$acc)
d_et_filt$acc[d_et_filt$acc == 2] <- "acc"
d_et_filt$acc[d_et_filt$acc == 1] <- "inacc"
d_et_filt <- d_et %>%
mutate(acc = acc_et)%>%
select(-acc_et)%>%
filter(!is.na(trans),
!is.na(acc),
familiarity != 0)
#more complex random effects structures fail to converge.
#expect random effects slopes to vary more for ID than target- effects of similarity and accuracy should vary more by participant than target.
d_et_filt$acc <- as.numeric(d_et_filt$acc)
d_et_filt$acc[d_et_filt$acc == 2] <- "acc"
d_et_filt$acc[d_et_filt$acc == 1] <- "inacc"
glm_trans_full <- lmer(trans ~ similar + acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
glm_trans_interaction <- lmer(trans ~ similar * acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
glm_trans_sim <- lmer(trans ~ similar +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
glm_trans_acc <- lmer(trans ~ acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
glm_trans_age <- lmer(trans ~ similar + acc + age_months +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
glm_trans_age_sim <- lmer(trans ~  acc + similar * age_months +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
glm_trans_age_acc <- lmer(trans ~ similar + acc * age_months +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
View(d_et_filt)
d_et_filt <- d_et %>%
mutate(acc = acc_et)%>%
select(-acc_et)%>%
filter(!is.na(trans),
!is.na(acc),
familiarity != 0)
glm_trans_interaction <- lmer(trans ~ similar * acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
View(d_et_filt)
source('~/.active-rstudio-document', echo=TRUE)
glm_trans_full <- lmer(trans ~ similar + acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
View(d_et_filt)
d_et_filt <- d_et %>%
mutate(acc = acc_et)%>%
select(-acc_et)%>%
filter(!is.na(trans),
!is.na(acc),
familiarity != 0)
glm_trans_full <- lmer(trans ~ similar + acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
View(d_et_filt)
d_et_filt$trans
glm_trans_full <- lmer(trans ~ similar + acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
glm_trans_sim <- lmer(trans ~ similar +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
levels(d_et_filt$ID)
levels(d_et_filt$trans)
levels(d_et_filt$acc)
d_et_filt$acc <- as.factor(as.character(d_et_filt$acc))
levels(d_et_filt$acc)
glm_trans_full <- lmer(trans ~ similar + acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
levels(d_et_filt$similar)
d_et_filt$similar <- as.factor(as.character(d_et_filt$similar))
levels(d_et_filt$similar)
glm_trans_full <- lmer(trans ~ similar + acc +
(similar + acc | ID),
data = d_et_filt, REML = FALSE)
levels(d_et_filt$trans)
d_et_filt$trans
glm_trans_full <- lmer(trans ~ similar + acc +
(similar | ID),
data = d_et_filt, REML = FALSE)
glm_trans_full <- lmer(trans ~ similar + acc +
(ID),
data = d_et_filt, REML = FALSE)
glm_trans_full <- lmer(trans ~ similar + acc +
(1|ID),
data = d_et_filt, REML = FALSE)
glm_trans_interaction <- lmer(trans ~ similar * acc +
(1| ID),
data = d_et_filt, REML = FALSE)
summary(glm_trans_interaction)
