Total_Prop_250[i,38] <- IBin_7_250[i,44]
Total_Prop_250[i,39] <- IBin_7_250[i,45]
#250 bin 8 proportions for new and the old
Total_Prop_250[i,40] <- IBin_8_250[i,44]
Total_Prop_250[i,41] <- IBin_8_250[i,45]
#250 bin 9 proportions for new and the old
Total_Prop_250[i,42] <- IBin_9_250[i,44]
Total_Prop_250[i,43] <- IBin_9_250[i,45]
#250 bin 10 proportions for new and the old
Total_Prop_250[i,44] <- IBin_10_250[i,44]
Total_Prop_250[i,45] <- IBin_10_250[i,45]
#250 bin 11 proportions for new and the old
Total_Prop_250[i,46] <- IBin_11_250[i,44]
Total_Prop_250[i,47] <- IBin_11_250[i,45]
#250 bin 12 proportions for new and the old
Total_Prop_250[i,48] <- IBin_12_250[i,44]
Total_Prop_250[i,49] <- IBin_12_250[i,45]
}
Total_Prop_250 <- Total_Prop_250[!(Total_Prop_250$Subject==999),]
write.table(Total_Prop_250, 'S:/Users/Sarah/R_Excel_Sheets/ET/Total_Prop_250.csv', sep=",", row.names=FALSE)
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Single <- as.data.frame(matrix(c(999:999),ncol = 10, nrow = 78, byrow=TRUE))
names(VRM_Single) = c("Subject", "Encode_1_Left","Encode_1_Right","Encode_2_Left","Encode_2_Right","New_1","Old_1",
"New_2","Old_2")
for (i in 1:nrow(VRM_Single_Jumbled)) {
VRM_Single[i,1] <- VRM_Single_Jumbled[i,1]
if (VRM_Single_Jumbled[i,10] == 1 | VRM_Single_Jumbled[i,10] == 5 | VRM_Single_Jumbled[i,10] == 9) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 2 | VRM_Single_Jumbled[i,10] == 6 | VRM_Single_Jumbled[i,10] == 10) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
if (VRM_Single_Jumbled[i,10] == 3 | VRM_Single_Jumbled[i,10] == 7 | VRM_Single_Jumbled[i,10] == 11) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 4 | VRM_Single_Jumbled[i,10] == 8 | VRM_Single_Jumbled[i,10] == 12) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
}
View(VRM_Single)
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Single <- as.data.frame(matrix(c(999:999),ncol = 10, nrow = 76, byrow=TRUE))
names(VRM_Single) = c("Subject", "Encode_1_Left","Encode_1_Right","Encode_2_Left","Encode_2_Right","New_1","Old_1",
"New_2","Old_2")
for (i in 1:nrow(VRM_Single_Jumbled)) {
VRM_Single[i,1] <- VRM_Single_Jumbled[i,1]
if (VRM_Single_Jumbled[i,10] == 1 | VRM_Single_Jumbled[i,10] == 5 | VRM_Single_Jumbled[i,10] == 9) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 2 | VRM_Single_Jumbled[i,10] == 6 | VRM_Single_Jumbled[i,10] == 10) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
if (VRM_Single_Jumbled[i,10] == 3 | VRM_Single_Jumbled[i,10] == 7 | VRM_Single_Jumbled[i,10] == 11) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 4 | VRM_Single_Jumbled[i,10] == 8 | VRM_Single_Jumbled[i,10] == 12) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
}
View(VRM_Single)
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Single <- as.data.frame(matrix(c(999:999),ncol = 10, nrow = 76, byrow=TRUE))
names(VRM_Single) = c("Subject", "Encode_1_Left","Encode_1_Right","Encode_2_Left","Encode_2_Right","New_1","Old_1",
"New_2","Old_2")
for (i in 1:nrow(VRM_Single_Jumbled)) {
VRM_Single[i,1] <- VRM_Single_Jumbled[i,1]
if (VRM_Single_Jumbled[i,10] == 1 | VRM_Single_Jumbled[i,10] == 5 | VRM_Single_Jumbled[i,10] == 9) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 2 | VRM_Single_Jumbled[i,10] == 6 | VRM_Single_Jumbled[i,10] == 10) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
if (VRM_Single_Jumbled[i,10] == 3 | VRM_Single_Jumbled[i,10] == 7 | VRM_Single_Jumbled[i,10] == 11) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 4 | VRM_Single_Jumbled[i,10] == 8 | VRM_Single_Jumbled[i,10] == 12) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
}
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Single <- as.data.frame(matrix(c(999:999),ncol = 9, nrow = 76, byrow=TRUE))
names(VRM_Single) = c("Subject", "Encode_1_Left","Encode_1_Right","Encode_2_Left","Encode_2_Right","New_1","Old_1",
"New_2","Old_2")
for (i in 1:nrow(VRM_Single_Jumbled)) {
VRM_Single[i,1] <- VRM_Single_Jumbled[i,1]
if (VRM_Single_Jumbled[i,10] == 1 | VRM_Single_Jumbled[i,10] == 5 | VRM_Single_Jumbled[i,10] == 9) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 2 | VRM_Single_Jumbled[i,10] == 6 | VRM_Single_Jumbled[i,10] == 10) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
if (VRM_Single_Jumbled[i,10] == 3 | VRM_Single_Jumbled[i,10] == 7 | VRM_Single_Jumbled[i,10] == 11) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,4]
}
if (VRM_Single_Jumbled[i,10] == 4 | VRM_Single_Jumbled[i,10] == 8 | VRM_Single_Jumbled[i,10] == 12) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,1]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,2]
}
}
View(VRM_Single)
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Associative_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_associative_(all)_no_labels.csv",header=FALSE, sep=",")
#Makes Single SpreadSheet
VRM_Single <- as.data.frame(matrix(c(999:999),ncol = 9, nrow = 76, byrow=TRUE))
names(VRM_Single) = c("Subject", "Encode_1_Left_Single","Encode_1_Right_Single","Encode_2_Left_Single","Encode_2_Right_Single","New_1_Single","Old_1_Single",
"New_2_Single","Old_2_Single")
for (i in 1:nrow(VRM_Single_Jumbled)) {
VRM_Single[i,1] <- VRM_Single_Jumbled[i,1]
if (VRM_Single_Jumbled[i,10] == 1 | VRM_Single_Jumbled[i,10] == 5 | VRM_Single_Jumbled[i,10] == 9) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,5]
}
if (VRM_Single_Jumbled[i,10] == 2 | VRM_Single_Jumbled[i,10] == 6 | VRM_Single_Jumbled[i,10] == 10) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,3]
}
if (VRM_Single_Jumbled[i,10] == 3 | VRM_Single_Jumbled[i,10] == 7 | VRM_Single_Jumbled[i,10] == 11) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,5]
}
if (VRM_Single_Jumbled[i,10] == 4 | VRM_Single_Jumbled[i,10] == 8 | VRM_Single_Jumbled[i,10] == 12) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,3]
}
}
#Makes Associative Spreadsheet
VRM_Associative <- as.data.frame(matrix(c(999:999),ncol = 5, nrow = 76, byrow=TRUE))
names(VRM_Associative) = c("Subject", "New_1_Associative", "Old_1_Associative", "New_2_Associative","Old_2_Associative")
for (i in 1:nrow(VRM_Associative_Jumbled)) {
VRM_Associative[i,1] <- VRM_Associative_Jumbled[i,1]
if (VRM_Associative_Jumbled[i,10] == 1) {
VRM_Associative[i,2] <- VRM_Associative_Jumbled[i,4]
VRM_Associative[i,3] <- VRM_Associative_Jumbled[i,5]
VRM_Associative[i,4] <- VRM_Associative_Jumbled[i,6]
VRM_Associative[i,5] <- VRM_Associative_Jumbled[i,7]
}
if (VRM_Associative_Jumbled[i,10] == 2) {
VRM_Associative[i,2] <- VRM_Associative_Jumbled[i,6]
VRM_Associative[i,3] <- VRM_Associative_Jumbled[i,7]
VRM_Associative[i,4] <- VRM_Associative_Jumbled[i,4]
VRM_Associative[i,5] <- VRM_Associative_Jumbled[i,5]
}
}
VRM_Combined <- rbind.fill.matrix (VRM_Single[c("Subject","New_1_Single","Old_1_Single","New_2_Single","Old_2_Single")],
VRM_Associative[c("Subject","New_1_Associative","Old_1_Associative","New_2_Associative","Old_2_Associative")])
library("plyr", lib.loc="~/R/win-library/3.2")
VRM_Combined <- rbind.fill.matrix (VRM_Single[c("Subject","New_1_Single","Old_1_Single","New_2_Single","Old_2_Single")],
VRM_Associative[c("Subject","New_1_Associative","Old_1_Associative","New_2_Associative","Old_2_Associative")])
View(VRM_Combined)
VRM_Combined <- rbind.fill (VRM_Single[c("Subject","New_1_Single","Old_1_Single","New_2_Single","Old_2_Single")],
VRM_Associative[c("Subject","New_1_Associative","Old_1_Associative","New_2_Associative","Old_2_Associative")])
View(VRM_Combined)
VRM_Combined <- as.data.frame(matrix(c(999:999),ncol = 9, nrow = 76, byrow=TRUE))
names(VRM_Combined) = c("Subject","New_1_Single","Old_1_Single","New_2_Single","Old_2_Single",
"New_1_Associative", "Old_1_Associative", "New_2_Associative","Old_2_Associative")
for (i in 1:nrow(VRM_Single)) {
VRM_Combined[i,1] <- VRM_Single[i,1]
VRM_Combined[i,2] <- VRM_Single[i,6]
VRM_Combined[i,3] <- VRM_Single[i,7]
VRM_Combined[i,4] <- VRM_Single[i,8]
VRM_Combined[i,5] <- VRM_Single[i,9]
}
for (i in 1:nrow(VRM_Associative)) {
if (VRM_Associative[i,1]== VRM_Single[i,1]) {
VRM_Combined[i,6] <- VRM_Associative[i,2]
VRM_Combined[i,7] <- VRM_Associative[i,3]
VRM_Combined[i,8] <- VRM_Associative[i,4]
VRM_Combined[i,9] <- VRM_Associative[i,5]
}
}
View(VRM_Combined)
match(VRM_Single$Subject, VRM_Associative$Subject)
VRM_Combined <- VRM_Single
VRM_Combined$New_1_Associative <- VRM_Associative$New_1_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
View(VRM_Combined)
VRM_Combined <- VRM_Single
VRM_Combined$New_1_Associative <- VRM_Associative$New_1_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$Old_1_Associative <- VRM_Associative$Old_1_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$New_2_Associative <- VRM_Associative$New_2_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$Old_2_Associative <- VRM_Associative$Old_2_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
View(VRM_Combined)
write.table(VRM_Combined, 'S:/Users/Sarah/R_Excel_Sheets/ET/VRM_COmbined', sep=",", row.names=FALSE)
write.table(VRM_Combined, 'S:/Users/Sarah/R_Excel_Sheets/ET/VRM_COmbined.csv', sep=",", row.names=FALSE)
write.table(VRM_Combined, 'S:/Users/Sarah/R_Excel_Sheets/ET/VRM_Combined.csv', sep=",", row.names=FALSE)
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Associative_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_associative_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Colors_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_colors_(all)_no_labels.csv",header=FALSE, sep=",")
#Makes Single SpreadSheet
VRM_Single <- as.data.frame(matrix(c(999:999),ncol = 9, nrow = 76, byrow=TRUE))
names(VRM_Single) = c("Subject", "Encode_1_Left_Single","Encode_1_Right_Single","Encode_2_Left_Single","Encode_2_Right_Single","New_1_Single","Old_1_Single",
"New_2_Single","Old_2_Single")
for (i in 1:nrow(VRM_Single_Jumbled)) {
VRM_Single[i,1] <- VRM_Single_Jumbled[i,1]
if (VRM_Single_Jumbled[i,10] == 1 | VRM_Single_Jumbled[i,10] == 5 | VRM_Single_Jumbled[i,10] == 9) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,5]
}
if (VRM_Single_Jumbled[i,10] == 2 | VRM_Single_Jumbled[i,10] == 6 | VRM_Single_Jumbled[i,10] == 10) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,3]
}
if (VRM_Single_Jumbled[i,10] == 3 | VRM_Single_Jumbled[i,10] == 7 | VRM_Single_Jumbled[i,10] == 11) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,5]
}
if (VRM_Single_Jumbled[i,10] == 4 | VRM_Single_Jumbled[i,10] == 8 | VRM_Single_Jumbled[i,10] == 12) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,3]
}
}
#Makes Associative Spreadsheet
VRM_Associative <- as.data.frame(matrix(c(999:999),ncol = 5, nrow = 76, byrow=TRUE))
names(VRM_Associative) = c("Subject", "New_1_Associative", "Old_1_Associative", "New_2_Associative","Old_2_Associative")
for (i in 1:nrow(VRM_Associative_Jumbled)) {
VRM_Associative[i,1] <- VRM_Associative_Jumbled[i,1]
if (VRM_Associative_Jumbled[i,10] == 1) {
VRM_Associative[i,2] <- VRM_Associative_Jumbled[i,4]
VRM_Associative[i,3] <- VRM_Associative_Jumbled[i,5]
VRM_Associative[i,4] <- VRM_Associative_Jumbled[i,6]
VRM_Associative[i,5] <- VRM_Associative_Jumbled[i,7]
}
if (VRM_Associative_Jumbled[i,10] == 2) {
VRM_Associative[i,2] <- VRM_Associative_Jumbled[i,6]
VRM_Associative[i,3] <- VRM_Associative_Jumbled[i,7]
VRM_Associative[i,4] <- VRM_Associative_Jumbled[i,4]
VRM_Associative[i,5] <- VRM_Associative_Jumbled[i,5]
}
}
#Makes Colors Spreadsheet
VRM_Colors <- as.data.frame(matrix(c(999:999),ncol = 7, nrow = 76, byrow=TRUE))
names(VRM_Colors) = c("Subject", "New_1_Colors", "Old_1_Colors", "New_2_Colors","Old_2_Colors","New_3_Colors","Old_3_Colors")
for (i in 1:nrow(VRM_Colors_Jumbled)) {
VRM_Colors[i,1] <- VRM_Colors_Jumbled[i,1]
VRM_Colors[i,2] <- VRM_Colors_Jumbled[i,4]
VRM_Colors[i,3] <- VRM_Colors_Jumbled[i,5]
VRM_Colors[i,4] <- VRM_Colors_Jumbled[i,6]
VRM_Colors[i,5] <- VRM_Colors_Jumbled[i,7]
VRM_Colors[i,6] <- VRM_Colors_Jumbled[i,12]
VRM_Colors[i,7] <- VRM_Colors_Jumbled[i,13]
}
VRM_Combined <- VRM_Single
VRM_Combined$New_1_Associative <- VRM_Associative$New_1_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$Old_1_Associative <- VRM_Associative$Old_1_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$New_2_Associative <- VRM_Associative$New_2_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$Old_2_Associative <- VRM_Associative$Old_2_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$New_1_Colors <- VRM_Colors$New_1_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$Old_1_Colors <- VRM_Colors$Old_1_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$New_2_Colors <- VRM_Colors$New_2_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$Old_2_Colors <- VRM_Colors$Old_2_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$New_3_Colors <- VRM_Colors$New_3_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$Old_3_Colors <- VRM_Colors$Old_3_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
write.table(VRM_Combined, 'S:/Users/Sarah/R_Excel_Sheets/ET/VRM_Combined.csv', sep=",", row.names=FALSE)
View(VRM_Colors)
VRM_Single_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_single_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Associative_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_associative_(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Colors_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_colors(all)_no_labels.csv",header=FALSE, sep=",")
#Makes Single SpreadSheet
VRM_Single <- as.data.frame(matrix(c(999:999),ncol = 9, nrow = 76, byrow=TRUE))
names(VRM_Single) = c("Subject", "Encode_1_Left_Single","Encode_1_Right_Single","Encode_2_Left_Single","Encode_2_Right_Single","New_1_Single","Old_1_Single",
"New_2_Single","Old_2_Single")
for (i in 1:nrow(VRM_Single_Jumbled)) {
VRM_Single[i,1] <- VRM_Single_Jumbled[i,1]
if (VRM_Single_Jumbled[i,10] == 1 | VRM_Single_Jumbled[i,10] == 5 | VRM_Single_Jumbled[i,10] == 9) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,5]
}
if (VRM_Single_Jumbled[i,10] == 2 | VRM_Single_Jumbled[i,10] == 6 | VRM_Single_Jumbled[i,10] == 10) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,3]
}
if (VRM_Single_Jumbled[i,10] == 3 | VRM_Single_Jumbled[i,10] == 7 | VRM_Single_Jumbled[i,10] == 11) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,3]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,5]
}
if (VRM_Single_Jumbled[i,10] == 4 | VRM_Single_Jumbled[i,10] == 8 | VRM_Single_Jumbled[i,10] == 12) {
VRM_Single[i,2] <- VRM_Single_Jumbled[i,8]
VRM_Single[i,3] <- VRM_Single_Jumbled[i,9]
VRM_Single[i,4] <- VRM_Single_Jumbled[i,6]
VRM_Single[i,5] <- VRM_Single_Jumbled[i,7]
VRM_Single[i,6] <- VRM_Single_Jumbled[i,4]
VRM_Single[i,7] <- VRM_Single_Jumbled[i,5]
VRM_Single[i,8] <- VRM_Single_Jumbled[i,2]
VRM_Single[i,9] <- VRM_Single_Jumbled[i,3]
}
}
#Makes Associative Spreadsheet
VRM_Associative <- as.data.frame(matrix(c(999:999),ncol = 5, nrow = 76, byrow=TRUE))
names(VRM_Associative) = c("Subject", "New_1_Associative", "Old_1_Associative", "New_2_Associative","Old_2_Associative")
for (i in 1:nrow(VRM_Associative_Jumbled)) {
VRM_Associative[i,1] <- VRM_Associative_Jumbled[i,1]
if (VRM_Associative_Jumbled[i,10] == 1) {
VRM_Associative[i,2] <- VRM_Associative_Jumbled[i,4]
VRM_Associative[i,3] <- VRM_Associative_Jumbled[i,5]
VRM_Associative[i,4] <- VRM_Associative_Jumbled[i,6]
VRM_Associative[i,5] <- VRM_Associative_Jumbled[i,7]
}
if (VRM_Associative_Jumbled[i,10] == 2) {
VRM_Associative[i,2] <- VRM_Associative_Jumbled[i,6]
VRM_Associative[i,3] <- VRM_Associative_Jumbled[i,7]
VRM_Associative[i,4] <- VRM_Associative_Jumbled[i,4]
VRM_Associative[i,5] <- VRM_Associative_Jumbled[i,5]
}
}
#Makes Colors Spreadsheet
VRM_Colors <- as.data.frame(matrix(c(999:999),ncol = 7, nrow = 76, byrow=TRUE))
names(VRM_Colors) = c("Subject", "New_1_Colors", "Old_1_Colors", "New_2_Colors","Old_2_Colors","New_3_Colors","Old_3_Colors")
for (i in 1:nrow(VRM_Colors_Jumbled)) {
VRM_Colors[i,1] <- VRM_Colors_Jumbled[i,1]
VRM_Colors[i,2] <- VRM_Colors_Jumbled[i,4]
VRM_Colors[i,3] <- VRM_Colors_Jumbled[i,5]
VRM_Colors[i,4] <- VRM_Colors_Jumbled[i,6]
VRM_Colors[i,5] <- VRM_Colors_Jumbled[i,7]
VRM_Colors[i,6] <- VRM_Colors_Jumbled[i,12]
VRM_Colors[i,7] <- VRM_Colors_Jumbled[i,13]
}
VRM_Combined <- VRM_Single
VRM_Combined$New_1_Associative <- VRM_Associative$New_1_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$Old_1_Associative <- VRM_Associative$Old_1_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$New_2_Associative <- VRM_Associative$New_2_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$Old_2_Associative <- VRM_Associative$Old_2_Associative[match(VRM_Single$Subject, VRM_Associative$Subject)]
VRM_Combined$New_1_Colors <- VRM_Colors$New_1_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$Old_1_Colors <- VRM_Colors$Old_1_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$New_2_Colors <- VRM_Colors$New_2_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$Old_2_Colors <- VRM_Colors$Old_2_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$New_3_Colors <- VRM_Colors$New_3_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
VRM_Combined$Old_3_Colors <- VRM_Colors$Old_3_Colors[match(VRM_Single$Subject, VRM_Colors$Subject)]
write.table(VRM_Combined, 'S:/Users/Sarah/R_Excel_Sheets/ET/VRM_Combined.csv', sep=",", row.names=FALSE)
View(VRM_Colors)
VRM_Colors_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_colors(all)_no_labels.csv",header=FALSE, sep=",")
VRM_Associative_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_associative_(all)_no_labels.csv",header=FALSE, sep=",")
getwd()
setwd("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/")
getwd()
VRM_Colors_Jumbled <- read.table("S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_Eye_movements/No_labels/Tadpole_ET_summary_VRM_colors(all)_no_labels.csv",header=FALSE, sep=",")
