}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <-2
RTcol <-2
OutlierOverCol <-3
}
#MAKE SURE TO CHANGE BASED ON DATA#
#################################################################################################
#Explicit_ET_T1#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Explicit_ET_T1_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual_ET_T1#
write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_ET_T1_RTwithSD.csv', sep = ",", row.names=FALSE)
#Explicit_ET_T2#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Explicit_ET_T2_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual_ET_T2#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_ET_T2_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual Touchscreen T1
#write.table(ExplicitOutliers, 'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T1_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T1
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T1_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T2
#write.table(ExplicitOutliers, 'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T2_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T2 Conf
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T2_ConfRTwithSD.csv', sep=",", row.names=FALSE)
#Perceptual Touchscreen T2
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T2_RTwithSD.csv', sep=",", row.names=FALSE)
#Perceptual Touchscreen T2 Conf
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T2_ConfRTwithSD.csv', sep=",", row.names=FALSE)
#################################################################################################
#BE SURE TO SELECT THE CORRECT READ IN AND OUTPUT LINES#
##############################################################################################
#Explicit Eyetracker T1
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_accuracy/memory/RT_Data/Explicit_RT_T1.csv', header = TRUE)
#Perceptual Eyetracker T1
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye_Tracker_Raw_Data/ET_accuracy/perceptual/RT_Data/Perceptual_RT_T1.csv', header = TRUE)
#Explicit Eyetracker T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/EyeTracker Raw Data/ET_accuracy/Memory/RT_Data/Explicit_RT_T2.csv', header = TRUE)
#Perceptual Eyetracker T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/EyeTracker Raw Data/ET_accuracy/Perceptual/RT_Data/Explicit_RT_T2.csv', header = TRUE)
#Perceptual Touchscreen T1
FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/perceptual/processed data/T1_Percept_TS_RT.csv', header = TRUE)
#Memory Touchscreen T1
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/retrieval/processed data/T1_Memory_TS_RT.csv', header = TRUE)
#Memory Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Memory T2/processed data/T2_Memory_TS_RT.csv', header = TRUE)
#Memory Conf Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Memory T2/processed data/T2_Memory_TS_ConfRT.csv', header = TRUE)
#Perceptual Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Perceptual T2/processed data/T2_Perceptual_TS_RT.csv', header = TRUE)
#Preceptual Conf Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Perceptual T2/processed data/T2_Perceptual_TS_ConfRT.csv', header = TRUE)
#############################################################################################
for (i in 1:nrow(FullOutliers)){
sdcalc <- FullOutliers[i,2:21]
FullOutliers[i,22] <- sd(sdcalc, na.rm = TRUE)
}
for (i in 1:nrow(FullOutliers)){
meancalc <- as.numeric(FullOutliers[i,2:21])
FullOutliers[i,23] <- mean(meancalc, trim = 0, na.rm = TRUE)
}
for (i in 1:nrow(FullOutliers)){
if (is.na(FullOutliers[i, 2])){
FullOutliers[i,2] <- 0
}
if (is.na(FullOutliers[i, 3])){
FullOutliers[i,3] <- 0
}
if (is.na(FullOutliers[i, 4])){
FullOutliers[i,4] <- 0
}
if (is.na(FullOutliers[i, 5])){
FullOutliers[i,5] <- 0
}
if (is.na(FullOutliers[i, 6])){
FullOutliers[i,6] <- 0
}
if (is.na(FullOutliers[i, 7])){
FullOutliers[i,7] <- 0
}
if (is.na(FullOutliers[i, 8])){
FullOutliers[i,8] <- 0
}
if (is.na(FullOutliers[i, 9])){
FullOutliers[i,9] <- 0
}
if (is.na(FullOutliers[i, 10])){
FullOutliers[i,10] <- 0
}
if (is.na(FullOutliers[i, 11])){
FullOutliers[i,11] <- 0
}
if (is.na(FullOutliers[i, 12])){
FullOutliers[i,12] <- 0
}
if (is.na(FullOutliers[i, 13])){
FullOutliers[i,13] <- 0
}
if (is.na(FullOutliers[i, 14])){
FullOutliers[i,14] <- 0
}
if (is.na(FullOutliers[i, 15])){
FullOutliers[i,15] <- 0
}
if (is.na(FullOutliers[i, 16])){
FullOutliers[i,16] <- 0
}
if (is.na(FullOutliers[i, 17])){
FullOutliers[i,17] <- 0
}
if (is.na(FullOutliers[i, 18])){
FullOutliers[i,18] <- 0
}
if (is.na(FullOutliers[i, 19])){
FullOutliers[i,19] <- 0
}
if (is.na(FullOutliers[i, 20])){
FullOutliers[i,20] <- 0
}
if (is.na(FullOutliers[i, 21])){
FullOutliers[i,21] <- 0
}
if (is.na(FullOutliers[i, 22])){
FullOutliers[i,22] <- 0
}
if (is.na(FullOutliers[i, 23])){
FullOutliers[i,23] <- 0
}
}
TwoPlus <- (FullOutliers$V22 + (2*FullOutliers$V23))
FullOutliersTwo <- cbind(FullOutliers,TwoPlus)
Input_RT <-2 #column that the RT is being taken from in the full outliers three spreadsheet
RTcol <-2 #column that the RT is outputted to in the new sheet
OutlierOverCol <-3 #comparison column in the new sheet
ExplicitOutliers <- as.data.frame(matrix(c(999:999),ncol = 41, nrow = 73, byrow=TRUE))
names(ExplicitOutliers) = c("Subject", "RT1", "O1","RT2", "O2",
"RT3", "O3", "RT4", "O4",
"RT5", "O5", "RT6", "O6",
"RT7", "O7", "RT8", "O8",
"RT9", "O9", "RT10", "O10",
"RT11", "O11", "RT12", "O12",
"RT13", "O13", "RT14", "O14",
"RT15", "O15", "RT16", "O16",
"RT17", "O17", "RT18", "O18",
"RT19", "O19", "RT20", "O20")
for (i in 1:nrow(FullOutliers)) {
ExplicitOutliers[i,1] <- FullOutliersTwo[i,1]
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <-2
RTcol <-2
OutlierOverCol <-3
}
#MAKE SURE TO CHANGE BASED ON DATA#
#################################################################################################
#Explicit_ET_T1#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Explicit_ET_T1_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual_ET_T1#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_ET_T1_RTwithSD.csv', sep = ",", row.names=FALSE)
#Explicit_ET_T2#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Explicit_ET_T2_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual_ET_T2#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_ET_T2_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual Touchscreen T1
write.table(ExplicitOutliers, 'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T1_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T1
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T1_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T2
#write.table(ExplicitOutliers, 'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T2_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T2 Conf
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T2_ConfRTwithSD.csv', sep=",", row.names=FALSE)
#Perceptual Touchscreen T2
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T2_RTwithSD.csv', sep=",", row.names=FALSE)
#Perceptual Touchscreen T2 Conf
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T2_ConfRTwithSD.csv', sep=",", row.names=FALSE)
#################################################################################################
