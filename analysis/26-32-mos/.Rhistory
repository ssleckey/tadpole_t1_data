d_et <- d_et %>%
mutate(similar = ifelse(similarity == 1, "similar",
"dissimilar")) %>%
select(-similarity)
d_et$ID <- as.factor(as.character(d_et$ID))
d_et <-d_et %>%
select(ID, trans, first_fix, fixations, acc, trial, age_months, condition, drop, familiarity, response, similar)
# Chunk 7
files <- dir('perceptual_et/')
rt_data_et_task <- data_frame()
for (f in files) {
sub_data <-read.table(paste('perceptual_et/', f, sep=""),header=TRUE)
subid <- str_replace(f, "-Event-Data.tsv","")
order <- sub_data%>%
filter(Event == 'ImageStart')%>%
filter(Descriptor != "fixation.png" & Descriptor != "blacksquare.bmp")%>%
mutate(trial = 1:length(Event))%>%
select(Descriptor, trial)
sub_data <- sub_data %>%
filter(Event == 'ImageStart' | Event == 'ImageEnd') %>%
filter(Descriptor != "fixation.png" & Descriptor != "blacksquare.bmp")%>%
spread(Event, Timestamp)%>%
mutate(RT = ImageEnd - ImageStart,
ID = subid)%>%
left_join(order)%>%
select(ID, trial, RT)
rt_data_et_task<- bind_rows(rt_data_et_task, sub_data)}
rt_data_et_task$trial <- as.character(rt_data_et_task$trial)
d_et<- left_join(d_et, rt_data_et_task)
#save to R data file.
save(d_et, file = "data_et.RData")
# Chunk 1
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE, fig.ext = "tiff")
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(RWiener)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(knitr)
library(markdown)
library(psych)
library(magrittr)
library(ez)
library(Hmisc)
library(lmerTest)
select <- dplyr::select
filter <- dplyr::filter
summarise <- dplyr::summarise
distinct <- dplyr::distinct
mutate <- dplyr::mutate
theme_set(theme_bw())
# Chunk 2
rm(list=ls())
load("data_et.RData")
#identify chance performers
mss_et_acc <-  d_et
mss_et_acc$acc <- as.numeric(as.character(mss_et_acc$acc))
mss_et_acc <- mss_et_acc %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc <- mss_et_acc$ID[mss_et_acc$drop_acc == TRUE]
#remove unfamiliar trials.
#remove trials with zero fixations to AOIs.
#remove participants who performed at chance.
d_et_filt<- d_et%>%
dplyr::filter(!ID %in% drop_acc,
familiarity != 0,
fixations != 0)
#compare trials with 0 and >0 fixations.
d_et_filt_comp <- d_et%>%
dplyr::filter(!ID %in% drop_acc,
familiarity != 0)%>%
mutate(looked = fixations != 0)
#how many trials are missing due to 0 fixations?
nofix <- filter(d_et_filt_comp, looked == FALSE)
length(nofix$ID)
length(unique(nofix$ID))
#any difference in accuracy based on whether there were any fixations to AOIs?
t.test(d_et_filt_comp$acc[d_et_filt_comp$fixations == 0], d_et_filt_comp$acc[d_et_filt_comp$fixations != 0])
d_et_filt_comp <- d_et_filt_comp%>%
group_by(looked)%>%
multi_boot_standard(col="acc")
# Chunk 3
mss_et_acc_tt <-  d_et_filt
mss_et_acc_tt$acc <- as.numeric(as.character(mss_et_acc_tt$acc))
#get mean accuracy by similarity condition.
mss_et_acc_t <- mss_et_acc_tt %>%
group_by(ID, similar)%>%
summarise(acc = mean(acc))%>%
spread(similar, acc)
mss_et_acc_r <- mss_et_acc_tt %>%
group_by(ID)%>%
summarise(acc = mean(acc))
accet <- describeBy(mss_et_acc_r$acc)
accet$mean
accet$sd
accet$min
accet$max
# Chunk 4
t.test(mss_et_acc_t$similar,
mss_et_acc_t$dissimilar, paired = TRUE)
similar <- psych::describe(mss_et_acc_t$similar)
dissimilar <- psych::describe(mss_et_acc_t$dissimilar)
similar
dissimilar
#get effect size
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
# Chunk 5
mss_et_acc <-  d_et_filt %>%
mutate(acc = ifelse(acc == 1, "acc", "inacc"))
#get average gaze switches for three conditions: accurate-similar, accurate-dissimilar, and inaccurate.
mss_et_inacc <-  mss_et_acc%>%
group_by(ID, acc)%>%
summarise(trans = mean(trans))%>%
spread(acc, trans)%>%
select(-acc)
mss_et_acc <-  mss_et_acc%>%
group_by(ID, acc)%>%
summarise(trans = mean(trans))%>%
spread(acc, trans)
mss_et_sim <-  d_et_filt %>%
dplyr::group_by(ID, acc, similar)%>%
dplyr::summarise(trans = mean(trans))%>%
dplyr::filter(acc == 1)%>%
tidyr::spread(similar, trans)%>%
dplyr::mutate(similar_acc = similar)%>%
dplyr::mutate(dissimilar_acc = dissimilar)
mss_et_aov <- mss_et_inacc %>%
left_join(mss_et_sim)%>%
dplyr::filter(!is.na(similar_acc),
!is.na(dissimilar_acc),
!is.na(inacc))%>%
gather("trial_type", "trans", inacc:dissimilar_acc) %>%
filter(trial_type != "acc",
trial_type != "similar",
trial_type != "dissimilar")
# Chunk 6
ET.aov <- with(mss_et_aov,
aov(trans ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(ET.aov)
ezANOVA(
mss_et_aov
, trans
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
# Chunk 7
#get means and CIs for plot.
mss_et_aov_p <- mss_et_aov %>%
group_by(trial_type)%>%
multi_boot_standard(col = "trans", na.rm = TRUE)
mss_et_aov_p$trial_type <- factor(mss_et_aov_p$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
mss_et_aov_p$trial_type <- factor(mss_et_aov_p$trial_type,
levels = c("dissimilar_acc", "similar_acc", "inacc"),
labels = c("dissimilar-accurate", "similar-accurate", "inaccurate"))
ggplot(mss_et_aov_p, aes(trial_type, mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
ylab("Mean Switch Count")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() + #grayscale
ggthemes::theme_few() +
theme(legend.position='none',
axis.text.x  = element_text(vjust=0.5, size=18),
axis.title.x = element_blank(),
axis.text.y  = element_text(vjust=0.5, size=20),
axis.title.y = element_text(size=20))
# Chunk 8
t.test(subset(mss_et_aov, trial_type=="inacc")$trans,
subset(mss_et_aov, trial_type=="similar_acc")$trans, paired = TRUE)
t.test(subset(mss_et_aov, trial_type=="inacc")$trans,
subset(mss_et_aov, trial_type=="dissimilar_acc")$trans, paired = TRUE)
t.test(subset(mss_et_aov, trial_type=="similar_acc")$trans,
subset(mss_et_aov, trial_type=="dissimilar_acc")$trans, paired = TRUE)
#get effect sizes
inacc_et <- psych::describe(subset(mss_et_aov, trial_type=="inacc")$trans)
sim_acc_et <- psych::describe(subset(mss_et_aov, trial_type=="similar_acc")$trans)
dissim_acc_et <- psych::describe(subset(mss_et_aov, trial_type=="dissimilar_acc")$trans)
cohensd_inacc_sim_acc_et <- abs((inacc_et$mean - sim_acc_et$mean)/((inacc_et$sd + sim_acc_et$sd)/2))
cohensd_inacc_sim_acc_et
cohensd_inacc_dissim_acc_et <- abs((inacc_et$mean - dissim_acc_et$mean)/((inacc_et$sd + dissim_acc_et$sd)/2))
cohensd_inacc_dissim_acc_et
cohensd_sim_acc_dissim_acc_et <- abs((sim_acc_et$mean - dissim_acc_et$mean)/((sim_acc_et$sd + dissim_acc_et$sd)/2))
cohensd_sim_acc_dissim_acc_et
# Chunk 9
mss_et_ff <-  filter(d_et_filt, !is.na(first_fix))%>%
group_by(ID, first_fix)%>%
summarise(trans = mean(trans))%>%
spread(first_fix, trans)%>%
filter(!is.na(correct) & !is.na(incorrect))
t.test(mss_et_ff$correct, mss_et_ff$incorrect, paired = TRUE)
mss_et_d <-  filter(d_et_filt, !is.na(first_fix))%>%
group_by(ID, first_fix)%>%
summarise(trans = mean(trans))
describeBy(mss_et_d$trans, mss_et_d$first_fix)
# Chunk 10
mss_trans_acc <-  d_et_filt %>%
mutate(acc = ifelse(acc == 1, "acc", "inacc"))%>%
filter(!is.na(first_fix))
#get average gaze switches for three conditions: accurate-similar, accurate-dissimilar, and inaccurate.
mss_trans_inacc <-  mss_trans_acc%>%
filter(!is.na(first_fix))%>%
group_by(ID, acc, first_fix)%>%
summarise(trans = mean(trans))%>%
spread(acc, trans)%>%
select(-acc)%>%
spread(first_fix, inacc)%>%
filter(!is.na(correct), !is.na(incorrect))%>%
gather("first_fix", "inacc", correct:incorrect)
mss_trans_sim <-  d_et_filt %>%
group_by(ID, acc, similar, first_fix)%>%
summarise(trans = mean(trans))%>%
filter(acc == 1, !is.na(first_fix))%>%
spread(similar, trans)%>%
mutate(similar_acc = similar)%>%
mutate(dissimilar_acc = dissimilar)%>%
select(-similar, -dissimilar)
mss_trans_sim_acc <- mss_trans_sim %>%
select(-dissimilar_acc)%>%
spread(first_fix, similar_acc)%>%
filter(!is.na(correct), !is.na(incorrect))%>%
gather("first_fix", "similar_acc", correct:incorrect)
mss_trans_dissim_acc <- mss_trans_sim %>%
select(-similar_acc)%>%
spread(first_fix, dissimilar_acc)%>%
filter(!is.na(correct), !is.na(incorrect))%>%
gather("first_fix", "dissimilar_acc", correct:incorrect)
mss_trans_aov <- mss_trans_inacc %>%
inner_join(mss_trans_sim_acc)%>%
select(-acc)%>%
inner_join(mss_trans_dissim_acc)%>%
select(-acc)%>%
gather("trial_type", "trans", inacc:dissimilar_acc)
# Chunk 11
mss_trans_aov_p <- mss_trans_aov %>%
group_by(first_fix, trial_type)%>%
multi_boot_standard(col = "trans", na.rm = TRUE)
ggplot(mss_trans_aov_p, aes(x = factor(first_fix), y = mean, fill = first_fix)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("First Fixation") +
ylab("Mean Switch Count")  +
facet_grid(~trial_type) +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
library(car)
Anova(lm(trans ~ first_fix * trial_type, data=mss_trans_aov), type=3)
summary(lm(trans ~ first_fix * trial_type, data=mss_trans_aov))
# Chunk 12
load("data_ts.RData")
#filter fast and slow RTs, missing data, and unfamiliar trials.
top_bound <- mean(log(d_ts$RT)) + 3*sd(log(d_ts$RT))
bottom_bound <- mean(log(d_ts$RT)) - 3*sd(log(d_ts$RT))
d_filt_rt <- d_ts %>%
dplyr::filter(log(RT) < top_bound,
log(RT) > bottom_bound,
familiarity != 0)
#remove participants who performed below chance.
mss_ts_acc <-  d_filt_rt
mss_ts_acc$acc <- as.numeric(as.character(mss_ts_acc$acc))
mss_ts_acc <- mss_ts_acc %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc_ts <- mss_ts_acc$ID[mss_ts_acc$drop_acc == TRUE]
d_filt_rt <- d_filt_rt %>%
dplyr::filter(!ID %in% drop_acc_ts)
# Chunk 13
mss_ts_acc_tt <-  d_filt_rt%>%
group_by(ID, similar)
mss_ts_acc_tt$acc <- as.numeric(as.character(mss_ts_acc_tt$acc))
mss_ts_acc_t <- mss_ts_acc_tt %>%
summarise(acc = mean(acc))%>%
spread(similar, acc)
mss_ts_acc_r <- mss_ts_acc_tt %>%
group_by(ID)%>%
summarise(acc = mean(acc))
accts <- describeBy(mss_ts_acc_r$acc)
accts$mean
accts$sd
accts$min
accts$max
# Chunk 14
t.test(mss_ts_acc_t$similar,
mss_ts_acc_t$dissimilar, paired = TRUE)
similar <- psych::describe(mss_ts_acc_t$similar)
dissimilar <- psych::describe(mss_ts_acc_t$dissimilar)
similar
dissimilar
#get effect size.
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
# Chunk 15
mss_ts_acc <-  d_filt_rt %>%
mutate(acc = ifelse(acc == 1, "acc", "inacc"))
#get average RTs for three conditions: accurate-similar, accurate-dissimilar, and inaccurate.
mss_ts_inacc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)%>%
select(-acc)
mss_ts_acc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)
mss_ts_sim <-  d_filt_rt %>%
dplyr::group_by(ID, acc, similar)%>%
dplyr::summarise(RT = mean(RT))%>%
dplyr::filter(acc == 1)%>%
tidyr::spread(similar, RT)%>%
dplyr::mutate(similar_acc = similar)%>%
dplyr::mutate(dissimilar_acc = dissimilar)
mss_ts_aov <- mss_ts_inacc %>%
left_join(mss_ts_sim)%>%
dplyr::filter(!is.na(similar_acc),
!is.na(dissimilar_acc),
!is.na(inacc))%>%
gather("trial_type", "RT", inacc:dissimilar_acc) %>%
filter(trial_type != "acc",
trial_type != "similar",
trial_type != "dissimilar")
# Chunk 16
TS.aov <- with(mss_ts_aov,
aov(RT ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(TS.aov)
ezANOVA(
mss_ts_aov
, RT
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
# Chunk 17
mss_ts_aov_p <- mss_ts_aov %>%
group_by(trial_type)%>%
multi_boot_standard(col = "RT", na.rm = TRUE)
mss_ts_aov_p$trial_type <- factor(mss_ts_aov_p$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
mss_ts_aov_p$trial_type <- factor(mss_ts_aov_p$trial_type,
levels = c("dissimilar_acc", "similar_acc", "inacc"),
labels = c("dissimilar-accurate", "similar-accurate", "inaccurate"))
ggplot(mss_ts_aov_p, aes(trial_type, mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
ylab("Mean Response Latency")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() + #grayscale
ggthemes::theme_few() +
theme(legend.position='none',
axis.text.x  = element_text(vjust=0.5, size=18),
axis.title.x = element_blank(),
axis.text.y  = element_text(vjust=0.5, size=20),
axis.title.y = element_text(size=20))
# Chunk 18
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="similar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="similar_acc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
inacc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="inacc")$RT)
sim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="similar_acc")$RT)
dissim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT)
#get effect sizes.
cohensd_inacc_sim_acc_ts <- abs((inacc_ts$mean - sim_acc_ts$mean)/((inacc_ts$sd + sim_acc_ts$sd)/2))
cohensd_inacc_sim_acc_ts
cohensd_inacc_dissim_acc_ts <- abs((inacc_ts$mean - dissim_acc_ts$mean)/((inacc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_inacc_dissim_acc_ts
cohensd_sim_acc_dissim_acc_ts <- abs((sim_acc_ts$mean - dissim_acc_ts$mean)/((sim_acc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_sim_acc_dissim_acc_ts
# Chunk 19
ms_et <- mss_et_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "Eye tracker")
ms_ts <- mss_ts_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "Touchscreen")
ms_acc <- full_join(ms_et, ms_ts)
ggplot(ms_acc, aes(x = factor(similar), y = mean, fill = similar)) + geom_bar(stat = "identity") +
facet_grid(~ task) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Similarity") +
ylab("Proportion Accurate") +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey()  +
theme(legend.position='none',
axis.text.x  = element_text(vjust=0.5, size=18),
axis.title.x = element_blank(),
axis.text.y  = element_text(vjust=0.5, size=20),
axis.title.y = element_text(size=20),
strip.text.x = element_text(vjust=0.5, size=20))
# Chunk 20
#get matrix with trial-level accuracy for both tasks
accmat <- mss_et_acc_tt %>%
select(ID, acc, trial)%>%
mutate(acc_et = acc)%>%
select(ID, trial, acc_et)%>%
left_join(mss_ts_acc_tt)%>%
mutate(acc_ts = acc)%>%
select(ID, trial, acc_et, acc_ts)
summary(glmer(acc_et ~ acc_ts +
(1|ID) +
(1|trial), #behavior item
data = accmat,
family = "binomial"))
# Chunk 21
#Get age in months from raw data.
ids_et <- d_et%>%
select(ID, age_months)
ids_ts <- d_ts%>%
select(ID, age_months)
#Get dataframes with difference scores for conditions.
et_diff <- spread(mss_et_aov, trial_type, trans)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(ids_et)%>%
unique
ts_diff <- spread(mss_ts_aov, trial_type, RT)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(ids_ts)%>%
unique
#Get correlations of age in months with difference scores.
rcorr(et_diff$age_months, et_diff$dacc_inacc)
rcorr(et_diff$age_months, et_diff$sacc_inacc)
rcorr(et_diff$age_months, et_diff$dacc_sacc)
rcorr(ts_diff$age_months, ts_diff$dacc_inacc)
rcorr(ts_diff$age_months, ts_diff$sacc_inacc)
rcorr(ts_diff$age_months, ts_diff$dacc_sacc)
# Chunk 22
acc_et_ms <- d_et_filt%>%
group_by(ID)%>%
summarise(acc = mean(acc))
sw_et_ms <- d_et_filt%>%
group_by(ID)%>%
summarise(trans = mean(trans))
ids <- left_join(acc_et_ms, sw_et_ms)
rcorr(ids$acc, ids$trans)
# Chunk 23
rt_ts_ms <- d_filt_rt%>%
group_by(ID, trial)%>%
summarise(rt = mean(RT))
sw_et_ms <- d_et_filt%>%
group_by(ID, trial)%>%
summarise(trans = mean(trans))
ids_rt_switch <- left_join(rt_ts_ms, sw_et_ms)
summary(lmer(rt ~ trans +
(1|ID) +
(1|trial),
data = ids_rt_switch))
View(d_et_filt)
rt_ts_ms <- d_filt_rt%>%
group_by(ID, trial)%>%
summarise(rt = mean(RT))
sw_et_ms <- d_et_filt%>%
group_by(ID, trial)%>%
summarise(rt = mean(RT))
rt_et_ms <- d_et_filt%>%
group_by(ID, trial)%>%
summarise(rt = mean(RT))
ids_rts <- left_join(rt_ts_ms, rt_et_ms)
rt_ts_ms <- d_filt_rt%>%
group_by(ID, trial)%>%
summarise(rt_ts = mean(RT))
rt_et_ms <- d_et_filt%>%
group_by(ID, trial)%>%
summarise(rt_et = mean(RT))
ids_rts <- left_join(rt_ts_ms, rt_et_ms)
View(ids_rts)
summary(lmer(rt_ts ~ rt_et +
(1|ID) +
(1|trial),
data = ids_rts))
