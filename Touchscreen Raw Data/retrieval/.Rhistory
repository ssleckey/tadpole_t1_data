write.table(memory,paste(pc,'processed data/',"sub",subj,".txt",sep=""))
}#end for loop for each participant
}
#Merging subject files
#Let's say all the files that you reformat and write above are in folder "processed data"
#Then you can have R read in each file at a time and add it to another spreadsheet
dir <- paste(pc,'processed data/',sep="")
files <- list.files(dir) #lists all the names of the files within the directory
AllSubs <- read.table(paste(dir,files[1],sep=""),header=T) #Set new data table to first file in directory
names(AllSubs)=c("Subject_ID","acc1","RT1","response1","acc2","RT2","response2","acc3","RT3","response3","acc4","RT4","response4","acc5","RT5","response5","acc6","RT6","response6",
"acc7","RT7","response7","acc8","RT8","response8","acc9","RT9","response9","acc10","RT10","response10","acc11","RT11","response11","acc12","response12","RT12","acc13","RT13","response13",
"acc14","RT14","response14","acc15","RT15","response15","acc16","RT16","response16","acc17","RT17","response17","acc18","RT18","response18","acc19","RT19","response19","acc20","RT20","response20")
#Loop through all other files and add them to new data table
for(i in 2:length(files)){
temp <- read.table(paste(dir,files[i],sep=""),header=T)
AllSubs <- rbind(AllSubs,temp)
}
AllSubjects <- as.data.frame(matrix(c(999:999),ncol = 61, nrow = 100, byrow=TRUE))
names(AllSubjects)=c("ID","accuracy1","accuracy2","accuracy3","accuracy4","accuracy5","accuracy6","accuracy7","accuracy8",
"accuracy9","accuracy10","accuracy11","accuracy12","accuracy13","accuracy14","accuracy15","accuracy16","accuracy17",
"accuracy18","accuracy19","accuracy20","response1","response2","response3","response4","response5","response6",
"response7","response8","response9","response10","response11","response12","response13","response14","response15",
"response16","response17","response18","response19","response20","RT1","RT2","RT3","RT4","RT5","RT6","RT7","RT8",
"RT9","RT10","RT11","RT12","RT13","RT14","RT15","RT16","RT17","RT18","RT19","RT20")
for (i in 1:nrow(AllSubs)) {
AllSubjects[i,1] <- AllSubs[i,1]
AllSubjects[i,2] <- AllSubs[i,2]
AllSubjects[i,3] <- AllSubs[i,5]
AllSubjects[i,4] <- AllSubs[i,8]
AllSubjects[i,5] <- AllSubs[i,11]
AllSubjects[i,6] <- AllSubs[i,14]
AllSubjects[i,7] <- AllSubs[i,17]
AllSubjects[i,8] <- AllSubs[i,20]
AllSubjects[i,9] <- AllSubs[i,23]
AllSubjects[i,10] <- AllSubs[i,26]
AllSubjects[i,11] <- AllSubs[i,29]
AllSubjects[i,12] <- AllSubs[i,32]
AllSubjects[i,13] <- AllSubs[i,35]
AllSubjects[i,14] <- AllSubs[i,38]
AllSubjects[i,15] <- AllSubs[i,41]
AllSubjects[i,16] <- AllSubs[i,44]
AllSubjects[i,17] <- AllSubs[i,47]
AllSubjects[i,18] <- AllSubs[i,50]
AllSubjects[i,19] <- AllSubs[i,53]
AllSubjects[i,20] <- AllSubs[i,56]
AllSubjects[i,21] <- AllSubs[i,59]
AllSubjects[i,22] <- AllSubs[i,4]
AllSubjects[i,23] <- AllSubs[i,7]
AllSubjects[i,24] <- AllSubs[i,10]
AllSubjects[i,25] <- AllSubs[i,13]
AllSubjects[i,26] <- AllSubs[i,16]
AllSubjects[i,27] <- AllSubs[i,19]
AllSubjects[i,28] <- AllSubs[i,22]
AllSubjects[i,29] <- AllSubs[i,25]
AllSubjects[i,30] <- AllSubs[i,28]
AllSubjects[i,31] <- AllSubs[i,31]
AllSubjects[i,32] <- AllSubs[i,34]
AllSubjects[i,33] <- AllSubs[i,37]
AllSubjects[i,34] <- AllSubs[i,40]
AllSubjects[i,35] <- AllSubs[i,43]
AllSubjects[i,36] <- AllSubs[i,46]
AllSubjects[i,37] <- AllSubs[i,49]
AllSubjects[i,38] <- AllSubs[i,52]
AllSubjects[i,39] <- AllSubs[i,55]
AllSubjects[i,40] <- AllSubs[i,58]
AllSubjects[i,41] <- AllSubs[i,61]
AllSubjects[i,42] <- AllSubs[i,3]
AllSubjects[i,43] <- AllSubs[i,6]
AllSubjects[i,44] <- AllSubs[i,9]
AllSubjects[i,45] <- AllSubs[i,12]
AllSubjects[i,46] <- AllSubs[i,15]
AllSubjects[i,47] <- AllSubs[i,18]
AllSubjects[i,48] <- AllSubs[i,21]
AllSubjects[i,49] <- AllSubs[i,24]
AllSubjects[i,50] <- AllSubs[i,27]
AllSubjects[i,51] <- AllSubs[i,30]
AllSubjects[i,52] <- AllSubs[i,33]
AllSubjects[i,53] <- AllSubs[i,36]
AllSubjects[i,54] <- AllSubs[i,39]
AllSubjects[i,55] <- AllSubs[i,42]
AllSubjects[i,56] <- AllSubs[i,45]
AllSubjects[i,57] <- AllSubs[i,48]
AllSubjects[i,58] <- AllSubs[i,51]
AllSubjects[i,59] <- AllSubs[i,54]
AllSubjects[i,60] <- AllSubs[i,57]
AllSubjects[i,61] <- AllSubs[i,60]
}
#Write new data set to a txt file
write.table(AllSubs,paste(pc,'processed data/AllSubs.txt',sep=""),row.names=FALSE)
write.table(AllSubjects,"S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/retrieval/processed data/AllSubjects.csv",sep=",", row.names=FALSE)
dir <- paste(pc,'processed data/',sep="")
files <- list.files(dir) #lists all the names of the files within the directory
AllSubs <- read.table(paste(dir,files[1],sep=""),header=T) #Set new data table to first file in directory
names(AllSubs)=c("Subject_ID","acc1","RT1","response1","acc2","RT2","response2","acc3","RT3","response3","acc4","RT4","response4","acc5","RT5","response5","acc6","RT6","response6",
"acc7","RT7","response7","acc8","RT8","response8","acc9","RT9","response9","acc10","RT10","response10","acc11","RT11","response11","acc12","response12","RT12","acc13","RT13","response13",
"acc14","RT14","response14","acc15","RT15","response15","acc16","RT16","response16","acc17","RT17","response17","acc18","RT18","response18","acc19","RT19","response19","acc20","RT20","response20")
#Loop through all other files and add them to new data table
dir <- paste(pc,'processed data/',sep="")
files <- list.files(dir) #lists all the names of the files within the directory
AllSubs <- read.table(paste(dir,files[1],sep=""),header=T) #Set new data table to first file in directory
AllSubs <- read.table(paste(dir,files[1],sep=""),header=T) #Set new data table to first file in directory
dir <- paste(pc,'processed data/',sep="")
files <- list.files(dir) #lists all the names of the files within the directory
AllSubs <- read.table(paste(dir,files[1],sep=""),header=T) #Set new data table to first file in directory
names(AllSubs)=c("Subject_ID","acc1","RT1","response1","acc2","RT2","response2","acc3","RT3","response3","acc4","RT4","response4","acc5","RT5","response5","acc6","RT6","response6",
"acc7","RT7","response7","acc8","RT8","response8","acc9","RT9","response9","acc10","RT10","response10","acc11","RT11","response11","acc12","response12","RT12","acc13","RT13","response13",
"acc14","RT14","response14","acc15","RT15","response15","acc16","RT16","response16","acc17","RT17","response17","acc18","RT18","response18","acc19","RT19","response19","acc20","RT20","response20")
#Loop through all other files and add them to new data table
for(i in 2:length(files)){
temp <- read.table(paste(dir,files[i],sep=""),header=T)
AllSubs <- rbind(AllSubs,temp)
}
AllSubjects <- as.data.frame(matrix(c(999:999),ncol = 61, nrow = 100, byrow=TRUE))
names(AllSubjects)=c("ID","accuracy1","accuracy2","accuracy3","accuracy4","accuracy5","accuracy6","accuracy7","accuracy8",
"accuracy9","accuracy10","accuracy11","accuracy12","accuracy13","accuracy14","accuracy15","accuracy16","accuracy17",
"accuracy18","accuracy19","accuracy20","response1","response2","response3","response4","response5","response6",
"response7","response8","response9","response10","response11","response12","response13","response14","response15",
"response16","response17","response18","response19","response20","RT1","RT2","RT3","RT4","RT5","RT6","RT7","RT8",
"RT9","RT10","RT11","RT12","RT13","RT14","RT15","RT16","RT17","RT18","RT19","RT20")
for (i in 1:nrow(AllSubs)) {
AllSubjects[i,1] <- AllSubs[i,1]
AllSubjects[i,2] <- AllSubs[i,2]
AllSubjects[i,3] <- AllSubs[i,5]
AllSubjects[i,4] <- AllSubs[i,8]
AllSubjects[i,5] <- AllSubs[i,11]
AllSubjects[i,6] <- AllSubs[i,14]
AllSubjects[i,7] <- AllSubs[i,17]
AllSubjects[i,8] <- AllSubs[i,20]
AllSubjects[i,9] <- AllSubs[i,23]
AllSubjects[i,10] <- AllSubs[i,26]
AllSubjects[i,11] <- AllSubs[i,29]
AllSubjects[i,12] <- AllSubs[i,32]
AllSubjects[i,13] <- AllSubs[i,35]
AllSubjects[i,14] <- AllSubs[i,38]
AllSubjects[i,15] <- AllSubs[i,41]
AllSubjects[i,16] <- AllSubs[i,44]
AllSubjects[i,17] <- AllSubs[i,47]
AllSubjects[i,18] <- AllSubs[i,50]
AllSubjects[i,19] <- AllSubs[i,53]
AllSubjects[i,20] <- AllSubs[i,56]
AllSubjects[i,21] <- AllSubs[i,59]
AllSubjects[i,22] <- AllSubs[i,4]
AllSubjects[i,23] <- AllSubs[i,7]
AllSubjects[i,24] <- AllSubs[i,10]
AllSubjects[i,25] <- AllSubs[i,13]
AllSubjects[i,26] <- AllSubs[i,16]
AllSubjects[i,27] <- AllSubs[i,19]
AllSubjects[i,28] <- AllSubs[i,22]
AllSubjects[i,29] <- AllSubs[i,25]
AllSubjects[i,30] <- AllSubs[i,28]
AllSubjects[i,31] <- AllSubs[i,31]
AllSubjects[i,32] <- AllSubs[i,34]
AllSubjects[i,33] <- AllSubs[i,37]
AllSubjects[i,34] <- AllSubs[i,40]
AllSubjects[i,35] <- AllSubs[i,43]
AllSubjects[i,36] <- AllSubs[i,46]
AllSubjects[i,37] <- AllSubs[i,49]
AllSubjects[i,38] <- AllSubs[i,52]
AllSubjects[i,39] <- AllSubs[i,55]
AllSubjects[i,40] <- AllSubs[i,58]
AllSubjects[i,41] <- AllSubs[i,61]
AllSubjects[i,42] <- AllSubs[i,3]
AllSubjects[i,43] <- AllSubs[i,6]
AllSubjects[i,44] <- AllSubs[i,9]
AllSubjects[i,45] <- AllSubs[i,12]
AllSubjects[i,46] <- AllSubs[i,15]
AllSubjects[i,47] <- AllSubs[i,18]
AllSubjects[i,48] <- AllSubs[i,21]
AllSubjects[i,49] <- AllSubs[i,24]
AllSubjects[i,50] <- AllSubs[i,27]
AllSubjects[i,51] <- AllSubs[i,30]
AllSubjects[i,52] <- AllSubs[i,33]
AllSubjects[i,53] <- AllSubs[i,36]
AllSubjects[i,54] <- AllSubs[i,39]
AllSubjects[i,55] <- AllSubs[i,42]
AllSubjects[i,56] <- AllSubs[i,45]
AllSubjects[i,57] <- AllSubs[i,48]
AllSubjects[i,58] <- AllSubs[i,51]
AllSubjects[i,59] <- AllSubs[i,54]
AllSubjects[i,60] <- AllSubs[i,57]
AllSubjects[i,61] <- AllSubs[i,60]
}
#Write new data set to a txt file
write.table(AllSubs,paste(pc,'processed data/AllSubs.txt',sep=""),row.names=FALSE)
write.table(AllSubjects,"S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/retrieval/processed data/AllSubjects.csv",sep=",", row.names=FALSE)
#Memory Touchscreen T1 seperating RTs and Acc
T1_Original_Memory_TS <- read.table('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/retrieval/processed data/AllSubs.txt', header=TRUE, sep="")
TS_Memory_ACC_T1 <- T1_Original_Memory_TS[,c(1,2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59)]
TS_Memory_RTs_T1 <- T1_Original_Memory_TS[,c(1,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60)]
write.table(TS_Memory_RTs_T1, 'S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/retrieval/processed data/T1_Memory_TS_RT.csv', sep=",", row.names=FALSE)
write.table(TS_Memory_ACC_T1, 'S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/retrieval/processed data/T1_Memory_TS_ACC.csv', sep=",", row.names=FALSE)
#BE SURE TO SELECT THE CORRECT READ IN AND OUTPUT LINES#
##############################################################################################
#Explicit Eyetracker T1
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_accuracy/memory/RT_Data/Explicit_RT_T1.csv', header = TRUE)
#Perceptual Eyetracker T1
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Eye Tracker Raw Data/ET_accuracy/perceptual/RT_Data/Perceptual_RT_T1.csv', header = TRUE)
#Explicit Eyetracker T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/EyeTracker Raw Data/ET_accuracy/Memory/RT_Data/Explicit_RT_T2.csv', header = TRUE)
#Perceptual Eyetracker T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/EyeTracker Raw Data/ET_accuracy/Perceptual/RT_Data/Explicit_RT_T2.csv', header = TRUE)
#Perceptual Touchscreen T1
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/perceptual/processed data/T1_Percept_TS_RT.csv', header = TRUE)
#Memory Touchscreen T1
FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T1/tadpole_t1_data/Touchscreen Raw Data/retrieval/processed data/T1_Memory_TS_RT.csv', header = TRUE)
#Memory Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Memory T2/processed data/T2_Memory_TS_RT.csv', header = TRUE)
#Memory Conf Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Memory T2/processed data/T2_Memory_TS_ConfRT.csv', header = TRUE)
#Perceptual Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Perceptual T2/processed data/T2_Perceptual_TS_RT.csv', header = TRUE)
#Preceptual Conf Touchscreen T2
#FullOutliers <- read.csv('S:/Users/Sarah/Data/Tadpole/T2/Touchscreen Raw Data/Perceptual T2/processed data/T2_Perceptual_TS_ConfRT.csv', header = TRUE)
#############################################################################################
for (i in 1:nrow(FullOutliers)){
sdcalc <- FullOutliers[i,2:21]
FullOutliers[i,22] <- sd(sdcalc, na.rm = TRUE)
}
for (i in 1:nrow(FullOutliers)){
meancalc <- as.numeric(FullOutliers[i,2:21])
FullOutliers[i,23] <- mean(meancalc, trim = 0, na.rm = TRUE)
}
for (i in 1:nrow(FullOutliers)){
if (is.na(FullOutliers[i, 2])){
FullOutliers[i,2] <- 0
}
if (is.na(FullOutliers[i, 3])){
FullOutliers[i,3] <- 0
}
if (is.na(FullOutliers[i, 4])){
FullOutliers[i,4] <- 0
}
if (is.na(FullOutliers[i, 5])){
FullOutliers[i,5] <- 0
}
if (is.na(FullOutliers[i, 6])){
FullOutliers[i,6] <- 0
}
if (is.na(FullOutliers[i, 7])){
FullOutliers[i,7] <- 0
}
if (is.na(FullOutliers[i, 8])){
FullOutliers[i,8] <- 0
}
if (is.na(FullOutliers[i, 9])){
FullOutliers[i,9] <- 0
}
if (is.na(FullOutliers[i, 10])){
FullOutliers[i,10] <- 0
}
if (is.na(FullOutliers[i, 11])){
FullOutliers[i,11] <- 0
}
if (is.na(FullOutliers[i, 12])){
FullOutliers[i,12] <- 0
}
if (is.na(FullOutliers[i, 13])){
FullOutliers[i,13] <- 0
}
if (is.na(FullOutliers[i, 14])){
FullOutliers[i,14] <- 0
}
if (is.na(FullOutliers[i, 15])){
FullOutliers[i,15] <- 0
}
if (is.na(FullOutliers[i, 16])){
FullOutliers[i,16] <- 0
}
if (is.na(FullOutliers[i, 17])){
FullOutliers[i,17] <- 0
}
if (is.na(FullOutliers[i, 18])){
FullOutliers[i,18] <- 0
}
if (is.na(FullOutliers[i, 19])){
FullOutliers[i,19] <- 0
}
if (is.na(FullOutliers[i, 20])){
FullOutliers[i,20] <- 0
}
if (is.na(FullOutliers[i, 21])){
FullOutliers[i,21] <- 0
}
if (is.na(FullOutliers[i, 22])){
FullOutliers[i,22] <- 0
}
if (is.na(FullOutliers[i, 23])){
FullOutliers[i,23] <- 0
}
}
TwoPlus <- (FullOutliers$V22 + (2*FullOutliers$V23))
FullOutliersTwo <- cbind(FullOutliers,TwoPlus)
Input_RT <-2 #column that the RT is being taken from in the full outliers three spreadsheet
RTcol <-2 #column that the RT is outputted to in the new sheet
OutlierOverCol <-3 #comparison column in the new sheet
ExplicitOutliers <- as.data.frame(matrix(c(999:999),ncol = 41, nrow = 73, byrow=TRUE))
names(ExplicitOutliers) = c("Subject", "RT1", "O1","RT2", "O2",
"RT3", "O3", "RT4", "O4",
"RT5", "O5", "RT6", "O6",
"RT7", "O7", "RT8", "O8",
"RT9", "O9", "RT10", "O10",
"RT11", "O11", "RT12", "O12",
"RT13", "O13", "RT14", "O14",
"RT15", "O15", "RT16", "O16",
"RT17", "O17", "RT18", "O18",
"RT19", "O19", "RT20", "O20")
for (i in 1:nrow(FullOutliers)) {
ExplicitOutliers[i,1] <- FullOutliersTwo[i,1]
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <- Input_RT + 1
RTcol <- RTcol +2
OutlierOverCol <- OutlierOverCol +2
if (FullOutliersTwo[i,Input_RT] >= FullOutliersTwo[i,24]){
ExplicitOutliers[i,OutlierOverCol] = 1
} else {
ExplicitOutliers[i,OutlierOverCol] = 0
}
ExplicitOutliers[i, RTcol] <- FullOutliersTwo[i,Input_RT]
Input_RT <-2
RTcol <-2
OutlierOverCol <-3
}
#MAKE SURE TO CHANGE BASED ON DATA#
#################################################################################################
#Explicit_ET_T1#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Explicit_ET_T1_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual_ET_T1#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_ET_T1_RTwithSD.csv', sep = ",", row.names=FALSE)
#Explicit_ET_T2#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Explicit_ET_T2_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual_ET_T2#
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_ET_T2_RTwithSD.csv', sep = ",", row.names=FALSE)
#Perceptual Touchscreen T1
#write.table(ExplicitOutliers, 'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T1_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T1
write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T1_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T2
#write.table(ExplicitOutliers, 'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T2_RTwithSD.csv', sep=",", row.names=FALSE)
#Memory Touchscreen T2 Conf
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Memory_TS_T2_ConfRTwithSD.csv', sep=",", row.names=FALSE)
#Perceptual Touchscreen T2
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T2_RTwithSD.csv', sep=",", row.names=FALSE)
#Perceptual Touchscreen T2 Conf
#write.table(ExplicitOutliers,'S:/Users/Sarah/R_Excel_Sheets/Perceptual_TS_T2_ConfRTwithSD.csv', sep=",", row.names=FALSE)
#################################################################################################
