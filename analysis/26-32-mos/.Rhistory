mss_ts_acc_t$dissimilar, paired = TRUE)
similar <- psych::describe(mss_ts_acc_t$similar)
dissimilar <- psych::describe(mss_ts_acc_t$dissimilar)
#get effect size.
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
# Chunk 13
ms <- mss_ts_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)
ggplot(ms, aes(x = factor(similar), y = mean, fill = similar)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Similarity") +
ylab("Proportion Accurate") + ggtitle("Touchscreen Accuracy") +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
# Chunk 14
mss_ts_acc <-  d_filt_rt
mss_ts_acc <- mss_ts_acc %>%
mutate(acc = ifelse(acc == 1, "acc", "inacc"))
#get average RTs for three conditions: accurate-similar, accurate-dissimilar, and inaccurate.
mss_ts_inacc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)%>%
select(-acc)
mss_ts_acc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)
mss_ts_sim <-  d_filt_rt %>%
dplyr::group_by(ID, acc, similar)%>%
dplyr::summarise(RT = mean(RT))%>%
dplyr::filter(acc == 1)%>%
tidyr::spread(similar, RT)%>%
dplyr::mutate(similar_acc = similar)%>%
dplyr::mutate(dissimilar_acc = dissimilar)
mss_ts_aov <- mss_ts_inacc %>%
left_join(mss_ts_sim)%>%
dplyr::filter(!is.na(similar_acc),
!is.na(dissimilar_acc),
!is.na(inacc))%>%
gather("trial_type", "RT", inacc:dissimilar_acc) %>%
filter(trial_type != "acc",
trial_type != "similar",
trial_type != "dissimilar")
# Chunk 15
TS.aov <- with(mss_ts_aov,
aov(RT ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(TS.aov)
ezANOVA(
mss_ts_aov
, RT
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
# Chunk 16
mss_ts_aov_p <- mss_ts_aov %>%
group_by(trial_type)%>%
multi_boot_standard(col = "RT", na.rm = TRUE)
mss_ts_aov_p$trial_type <- factor(mss_ts_aov_p$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
ggplot(mss_ts_aov_p, aes(x = factor(trial_type), y = mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Trial Type") +
ylab("Mean Reaction Time (ms)")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
# Chunk 17
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="similar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="similar_acc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
inacc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="inacc")$RT)
sim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="similar_acc")$RT)
dissim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT)
#get effect sizes.
cohensd_inacc_sim_acc_ts <- abs((inacc_ts$mean - sim_acc_ts$mean)/((inacc_ts$sd + sim_acc_ts$sd)/2))
cohensd_inacc_sim_acc_ts
cohensd_inacc_dissim_acc_ts <- abs((inacc_ts$mean - dissim_acc_ts$mean)/((inacc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_inacc_dissim_acc_ts
cohensd_sim_acc_dissim_acc_ts <- abs((sim_acc_ts$mean - dissim_acc_ts$mean)/((sim_acc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_sim_acc_dissim_acc_ts
# Chunk 18
ms_et <- mss_et_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "ET")
ms_ts <- mss_ts_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "TS")
ms_acc <- full_join(ms_et, ms_ts)
ggplot(ms_acc, aes(x = factor(similar), y = mean, fill = similar)) + geom_bar(stat = "identity") +
facet_grid(~ task) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Similarity") +
ylab("Proportion Accurate") + ggtitle("Accuracy") +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
# Chunk 19
#Get age in months from raw data.
age_et <- d_et%>%
select(ID, age_months)
age_ts <- d_ts%>%
select(ID, age_months)
#Get dataframes with difference scores for conditions.
et_diff <- spread(mss_et_aov, trial_type, trans)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(age_et)
ts_diff <- spread(mss_ts_aov, trial_type, RT)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(age_ts)
#Get correlations of age in months with difference scores.
rcorr(et_diff$age_months, et_diff$dacc_inacc)
rcorr(et_diff$age_months, et_diff$sacc_inacc)
rcorr(et_diff$age_months, et_diff$dacc_sacc)
rcorr(ts_diff$age_months, ts_diff$dacc_inacc)
rcorr(ts_diff$age_months, ts_diff$sacc_inacc)
rcorr(ts_diff$age_months, ts_diff$dacc_sacc)
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(RWiener)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(knitr)
library(markdown)
library(psych)
library(magrittr)
library(ez)
library(Hmisc)
select <- dplyr::select
filter <- dplyr::filter
summarise <- dplyr::summarise
distinct <- dplyr::distinct
mutate <- dplyr::mutate
theme_set(theme_bw())
rm(list=ls())
load("data_et.RData")
#remove unfamiliar trials.
#"trans" = gaze switches
d_et_filt <- d_et %>%
dplyr::filter(familiarity != 0)
#remove participants who performed at chance.
mss_et_acc <-  d_et_filt
mss_et_acc$acc <- as.numeric(as.character(mss_et_acc$acc))
mss_et_acc <- mss_et_acc %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc <- mss_et_acc$ID[mss_et_acc$drop_acc == TRUE]
d_et_filt <- d_et_filt %>%
dplyr::filter(!ID %in% drop_acc)
mss_et_acc_t <-  d_et_filt %>%
as.numeric(acc)
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(RWiener)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(knitr)
library(markdown)
library(psych)
library(magrittr)
library(ez)
library(Hmisc)
select <- dplyr::select
filter <- dplyr::filter
summarise <- dplyr::summarise
distinct <- dplyr::distinct
mutate <- dplyr::mutate
theme_set(theme_bw())
rm(list=ls())
load("data_et.RData")
#remove unfamiliar trials.
#"trans" = gaze switches
d_et_filt <- d_et %>%
dplyr::filter(familiarity != 0)
#remove participants who performed at chance.
mss_et_acc <-  d_et_filt
mss_et_acc$acc <- as.numeric(as.character(mss_et_acc$acc))
mss_et_acc <- mss_et_acc %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc <- mss_et_acc$ID[mss_et_acc$drop_acc == TRUE]
d_et_filt <- d_et_filt %>%
dplyr::filter(!ID %in% drop_acc)
mss_et_acc_t <-  d_et_filt %>%
mss_et_acc_t$acc <- as.numeric(as.character(mss_et_acc_t$acc))
#get mean accuracy by similarity condition.
mss_et_acc_t <- mss_et_acc_t %>%
group_by(ID, similar)%>%
summarise(acc = mean(acc))%>%
spread(similar, acc)
rm(list=ls())
load("data_et.RData")
#remove unfamiliar trials.
#"trans" = gaze switches
d_et_filt <- d_et %>%
dplyr::filter(familiarity != 0)
#remove participants who performed at chance.
mss_et_acc <-  d_et_filt
mss_et_acc$acc <- as.numeric(as.character(mss_et_acc$acc))
mss_et_acc <- mss_et_acc %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc <- mss_et_acc$ID[mss_et_acc$drop_acc == TRUE]
d_et_filt <- d_et_filt %>%
dplyr::filter(!ID %in% drop_acc)
mss_et_acc_t <-  d_et_filt
mss_et_acc_t$acc <- as.numeric(as.character(mss_et_acc_t$acc))
#get mean accuracy by similarity condition.
mss_et_acc_t <- mss_et_acc_t %>%
group_by(ID, similar)%>%
summarise(acc = mean(acc))%>%
spread(similar, acc)
t.test(mss_et_acc_t$similar,
mss_et_acc_t$dissimilar, paired = TRUE)
similar <- psych::describe(mss_et_acc_t$similar)
dissimilar <- psych::describe(mss_et_acc_t$dissimilar)
#get effect size
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
similar
t.test(mss_et_acc_t$similar,
mss_et_acc_t$dissimilar, paired = TRUE)
similar <- psych::describe(mss_et_acc_t$similar)
dissimilar <- psych::describe(mss_et_acc_t$dissimilar)
similar
dissimilar
#get effect size
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
mss_et_acc <-  d_et_filt %>%
mutate(acc = ifelse(acc == 1, "acc", "inacc"))
#get average gaze switches for three conditions: accurate-similar, accurate-dissimilar, and inaccurate.
mss_et_inacc <-  mss_et_acc%>%
group_by(ID, acc)%>%
summarise(trans = mean(trans))%>%
spread(acc, trans)%>%
select(-acc)
mss_et_acc <-  mss_et_acc%>%
group_by(ID, acc)%>%
summarise(trans = mean(trans))%>%
spread(acc, trans)
mss_et_sim <-  d_et_filt %>%
dplyr::group_by(ID, acc, similar)%>%
dplyr::summarise(trans = mean(trans))%>%
dplyr::filter(acc == 1)%>%
tidyr::spread(similar, trans)%>%
dplyr::mutate(similar_acc = similar)%>%
dplyr::mutate(dissimilar_acc = dissimilar)
mss_et_aov <- mss_et_inacc %>%
left_join(mss_et_sim)%>%
dplyr::filter(!is.na(similar_acc),
!is.na(dissimilar_acc),
!is.na(inacc))%>%
gather("trial_type", "trans", inacc:dissimilar_acc) %>%
filter(trial_type != "acc",
trial_type != "similar",
trial_type != "dissimilar")
ET.aov <- with(mss_et_aov,
aov(trans ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(ET.aov)
ezANOVA(
mss_et_aov
, trans
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
#get means and CIs for plot.
mss_et_aov_p <- mss_et_aov %>%
group_by(trial_type)%>%
multi_boot_standard(col = "trans", na.rm = TRUE)
mss_et_aov_p$trial_type <- factor(mss_et_aov_p$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
ggplot(mss_et_aov_p, aes(x = factor(trial_type), y = mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Trial Type") +
ylab("Mean Switch Count")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
t.test(subset(mss_et_aov, trial_type=="inacc")$trans,
subset(mss_et_aov, trial_type=="similar_acc")$trans, paired = TRUE)
t.test(subset(mss_et_aov, trial_type=="inacc")$trans,
subset(mss_et_aov, trial_type=="dissimilar_acc")$trans, paired = TRUE)
t.test(subset(mss_et_aov, trial_type=="similar_acc")$trans,
subset(mss_et_aov, trial_type=="dissimilar_acc")$trans, paired = TRUE)
#get effect sizes
inacc_et <- psych::describe(subset(mss_et_aov, trial_type=="inacc")$trans)
sim_acc_et <- psych::describe(subset(mss_et_aov, trial_type=="similar_acc")$trans)
dissim_acc_et <- psych::describe(subset(mss_et_aov, trial_type=="dissimilar_acc")$trans)
cohensd_inacc_sim_acc_et <- abs((inacc_et$mean - sim_acc_et$mean)/((inacc_et$sd + sim_acc_et$sd)/2))
cohensd_inacc_sim_acc_et
cohensd_inacc_dissim_acc_et <- abs((inacc_et$mean - dissim_acc_et$mean)/((inacc_et$sd + dissim_acc_et$sd)/2))
cohensd_inacc_dissim_acc_et
cohensd_sim_acc_dissim_acc_et <- abs((sim_acc_et$mean - dissim_acc_et$mean)/((sim_acc_et$sd + dissim_acc_et$sd)/2))
cohensd_sim_acc_dissim_acc_et
load("data_ts.RData")
#filter fast and slow RTs, missing data, and unfamiliar trials.
top_bound <- mean(log(d_ts$RT)) + 3*sd(log(d_ts$RT))
bottom_bound <- mean(log(d_ts$RT)) - 3*sd(log(d_ts$RT))
d_filt_rt <- d_ts %>%
dplyr::filter(log(RT) < top_bound,
log(RT) > bottom_bound,
familiarity != 0)
mss_ts_acc <-  d_filt_rt
mss_ts_acc$acc <- as.numeric(as.character(mss_ts_acc$acc))
mss_ts_acc <- mss_ts_acc %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc_ts <- mss_ts_acc$ID[mss_ts_acc$drop_acc == TRUE]
d_filt_rt <- d_filt_rt %>%
dplyr::filter(!ID %in% drop_acc_ts)
mss_ts_acc_t <-  d_filt_rt%>%
group_by(ID, similar)
mss_ts_acc_t$acc <- as.numeric(as.character(mss_ts_acc_t$acc))
mss_ts_acc_t <- mss_ts_acc_t %>%
summarise(acc = mean(acc))%>%
spread(similar, acc)
t.test(mss_ts_acc_t$similar,
mss_ts_acc_t$dissimilar, paired = TRUE)
similar <- psych::describe(mss_ts_acc_t$similar)
dissimilar <- psych::describe(mss_ts_acc_t$dissimilar)
#get effect size.
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
ms <- mss_ts_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)
ggplot(ms, aes(x = factor(similar), y = mean, fill = similar)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Similarity") +
ylab("Proportion Accurate") + ggtitle("Touchscreen Accuracy") +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
mss_ts_acc <-  d_filt_rt
mss_ts_acc <- mss_ts_acc %>%
mutate(acc = ifelse(acc == 1, "acc", "inacc"))
#get average RTs for three conditions: accurate-similar, accurate-dissimilar, and inaccurate.
mss_ts_inacc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)%>%
select(-acc)
mss_ts_acc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)
mss_ts_sim <-  d_filt_rt %>%
dplyr::group_by(ID, acc, similar)%>%
dplyr::summarise(RT = mean(RT))%>%
dplyr::filter(acc == 1)%>%
tidyr::spread(similar, RT)%>%
dplyr::mutate(similar_acc = similar)%>%
dplyr::mutate(dissimilar_acc = dissimilar)
mss_ts_aov <- mss_ts_inacc %>%
left_join(mss_ts_sim)%>%
dplyr::filter(!is.na(similar_acc),
!is.na(dissimilar_acc),
!is.na(inacc))%>%
gather("trial_type", "RT", inacc:dissimilar_acc) %>%
filter(trial_type != "acc",
trial_type != "similar",
trial_type != "dissimilar")
TS.aov <- with(mss_ts_aov,
aov(RT ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(TS.aov)
ezANOVA(
mss_ts_aov
, RT
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
mss_ts_aov_p <- mss_ts_aov %>%
group_by(trial_type)%>%
multi_boot_standard(col = "RT", na.rm = TRUE)
mss_ts_aov_p$trial_type <- factor(mss_ts_aov_p$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
ggplot(mss_ts_aov_p, aes(x = factor(trial_type), y = mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Trial Type") +
ylab("Mean Reaction Time (ms)")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="similar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="similar_acc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
inacc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="inacc")$RT)
sim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="similar_acc")$RT)
dissim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT)
#get effect sizes.
cohensd_inacc_sim_acc_ts <- abs((inacc_ts$mean - sim_acc_ts$mean)/((inacc_ts$sd + sim_acc_ts$sd)/2))
cohensd_inacc_sim_acc_ts
cohensd_inacc_dissim_acc_ts <- abs((inacc_ts$mean - dissim_acc_ts$mean)/((inacc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_inacc_dissim_acc_ts
cohensd_sim_acc_dissim_acc_ts <- abs((sim_acc_ts$mean - dissim_acc_ts$mean)/((sim_acc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_sim_acc_dissim_acc_ts
ms_et <- mss_et_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "ET")
ms_ts <- mss_ts_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "TS")
ms_acc <- full_join(ms_et, ms_ts)
ggplot(ms_acc, aes(x = factor(similar), y = mean, fill = similar)) + geom_bar(stat = "identity") +
facet_grid(~ task) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Similarity") +
ylab("Proportion Accurate") + ggtitle("Accuracy") +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
#Get age in months from raw data.
age_et <- d_et%>%
select(ID, age_months)
age_ts <- d_ts%>%
select(ID, age_months)
#Get dataframes with difference scores for conditions.
et_diff <- spread(mss_et_aov, trial_type, trans)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(age_et)
ts_diff <- spread(mss_ts_aov, trial_type, RT)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(age_ts)
#Get correlations of age in months with difference scores.
rcorr(et_diff$age_months, et_diff$dacc_inacc)
rcorr(et_diff$age_months, et_diff$sacc_inacc)
rcorr(et_diff$age_months, et_diff$dacc_sacc)
rcorr(ts_diff$age_months, ts_diff$dacc_inacc)
rcorr(ts_diff$age_months, ts_diff$sacc_inacc)
rcorr(ts_diff$age_months, ts_diff$dacc_sacc)
